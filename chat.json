[
    {
        "role": "user",
        "content": "Implementa, siguiendo con el estilo de los códigos siguientes, un minijuego que se base en resolver un puzzle.\n\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Settings, User, Trophy, HelpCircle, Volume2 } from 'lucide-react';\nimport 'tailwindcss/tailwind.css'; // Ensure Tailwind CSS is imported\n\nexport default function ExoplanetExploration() {\n  const [stars, setStars] = useState([]);\n\n  useEffect(() => {\n    const generateStars = () => {\n      return Array.from({ length: 300 }, () => ({\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 3 + 1,\n        opacity: Math.random() * 0.7 + 0.3,\n        twinkleSpeed: Math.random() * 2 + 1,\n      }));\n    };\n    setStars(generateStars());\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden flex items-center justify-center bg-[url('https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80')] bg-cover bg-center\">\n      {/* Starfield Background with Twinkling Effect */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black\"></div>\n      {stars.map((star, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute bg-white rounded-full\"\n          style={{\n            left: `${star.x}%`,\n            top: `${star.y}%`,\n            width: `${star.size}px`,\n            height: `${star.size}px`,\n            opacity: star.opacity,\n          }}\n          animate={{ opacity: [0.3, star.opacity, 0.3] }}\n          transition={{\n            duration: star.twinkleSpeed,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      ))}\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n\n      {/* Content */}\n      <div className=\"z-10 text-center space-y-12 px-4\">\n        {/* Title with White Color */}\n        <motion.h1\n          initial={{ y: -100, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, ease: 'backOut' }}\n          className=\"text-6xl md:text-8xl font-extrabold text-white mb-12\"\n          style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n        >\n          Exploración de Exoplanetas\n        </motion.h1>\n\n        {/* Removed Rocket Icon Animation */}\n\n        {/* Main Action Button (Styled like Menu 1's Button) */}\n        <motion.div\n          initial={{ scale: 0.8, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          transition={{ duration: 0.6, delay: 0.8 }}\n        >\n          <button\n            className=\"text-5xl font-bold py-6 px-24 bg-transparent border-4 border-white text-white hover:bg-white hover:text-black transition-all duration-300 rounded-full tracking-widest\"\n            style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n          >\n            JUGAR\n          </button>\n        </motion.div>\n\n        {/* Navigation Icons */}\n        <div className=\"flex justify-center space-x-16 mt-12\">\n          {[\n            { icon: User, label: 'Perfil' },\n            { icon: Trophy, label: 'Logros' },\n            { icon: Settings, label: 'Ajustes' },\n            { icon: HelpCircle, label: 'Ayuda' },\n            { icon: Volume2, label: 'Sonido' },\n          ].map((item, index) => (\n            <motion.div\n              key={item.label}\n              initial={{ y: 50, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ duration: 0.5, delay: 0.2 + index * 0.1 }}\n              className=\"text-center\"\n            >\n              <button className=\"group flex flex-col items-center\">\n                <item.icon className=\"w-12 h-12 text-white opacity-80 group-hover:opacity-100 transition-opacity duration-300\" />\n                <span className=\"mt-2 text-white text-base opacity-80 group-hover:opacity-100 transition-opacity duration-300\">\n                  {item.label}\n                </span>\n              </button>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n\n      {/* Additional Styles for Glowing Effects and Animations */}\n      <style jsx>{`\n        @keyframes bounce-slow {\n          0%, 100% {\n            transform: translateY(0);\n          }\n          50% {\n            transform: translateY(-15px);\n          }\n        }\n        .animate-bounce-slow {\n          animation: bounce-slow 4s infinite;\n        }\n      `}</style>\n    </div>\n  );\n}"
    },
    {
        "role": "assistant",
        "content": "¡Claro! A continuación, te presento una implementación de un minijuego de puzzle de tipo **\"Rompecabezas deslizante\"** (Sliding Puzzle) que sigue el estilo y las características del código que proporcionaste. Este juego encaja en la temática de exploración espacial y mantiene la estética visual consistente.\n\n### Descripción del Minijuego\n\nEl minijuego consiste en un rompecabezas de 3x3 que muestra una imagen relacionada con la exploración de exoplanetas. El usuario debe deslizar las piezas para reorganizarlas y completar la imagen. Una vez completado, se muestra un mensaje de felicitación.\n\n### Implementación\n\nAquí está el código completo del componente `PuzzleGame`. Asegúrate de tener instaladas las dependencias necesarias (`react`, `framer-motion`, `lucide-react`, `tailwindcss`) y de importar correctamente Tailwind CSS en tu proyecto.\n\n```javascript\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Settings, User, Trophy, HelpCircle, Volume2, RefreshCcw } from 'lucide-react';\nimport 'tailwindcss/tailwind.css'; // Asegúrate de que Tailwind CSS esté importado\n\nconst IMAGE_URL = 'https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80';\n\nexport default function PuzzleGame() {\n  const gridSize = 3;\n  const totalTiles = gridSize * gridSize;\n  const [tiles, setTiles] = useState([]);\n  const [emptyTile, setEmptyTile] = useState(totalTiles - 1);\n  const [moves, setMoves] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // Generar disposiciones iniciales\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  const startGame = () => {\n    let initialTiles = Array.from(Array(totalTiles).keys());\n    initialTiles = shuffle(initialTiles);\n    // Asegurarse de que el estado inicial sea resoluble\n    if (!isSolvable(initialTiles)) {\n      // Si no es resoluble, intercambiar dos tiles\n      [initialTiles[0], initialTiles[1]] = [initialTiles[1], initialTiles[0]];\n    }\n    setTiles(initialTiles);\n    setEmptyTile(initialTiles.indexOf(totalTiles - 1));\n    setMoves(0);\n    setIsCompleted(false);\n  };\n\n  const shuffle = (array) => {\n    let shuffled = array.slice();\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const isSolvable = (array) => {\n    let inversionCount = 0;\n    for (let i = 0; i < array.length - 1; i++) {\n      for (let j = i + 1; j < array.length; j++) {\n        if (array[i] > array[j]) inversionCount++;\n      }\n    }\n    return inversionCount % 2 === 0;\n  };\n\n  const handleTileClick = (index) => {\n    if (isAdjacent(index, emptyTile)) {\n      let newTiles = tiles.slice();\n      [newTiles[index], newTiles[emptyTile]] = [newTiles[emptyTile], newTiles[index]];\n      setTiles(newTiles);\n      setEmptyTile(index);\n      setMoves(moves + 1);\n      if (checkCompletion(newTiles)) {\n        setIsCompleted(true);\n      }\n    }\n  };\n\n  const isAdjacent = (index1, index2) => {\n    const row1 = Math.floor(index1 / gridSize);\n    const col1 = index1 % gridSize;\n    const row2 = Math.floor(index2 / gridSize);\n    const col2 = index2 % gridSize;\n    return (\n      (Math.abs(row1 - row2) === 1 && col1 === col2) ||\n      (Math.abs(col1 - col2) === 1 && row1 === row2)\n    );\n  };\n\n  const checkCompletion = (currentTiles) => {\n    for (let i = 0; i < totalTiles; i++) {\n      if (currentTiles[i] !== i) return false;\n    }\n    return true;\n  };\n\n  // Dividir la imagen en piezas\n  const tileSize = 300 / gridSize; // Tamaño de la imagen en px\n\n  return (\n    <div className=\"relative min-h-screen w-full overflow-hidden flex items-center justify-center bg-[url('https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80')] bg-cover bg-center\">\n      {/* Campo de estrellas */}\n      <Starfield />\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n\n      {/* Contenido */}\n      <div className=\"z-10 text-center space-y-8 px-4\">\n        {/* Título */}\n        <motion.h1\n          initial={{ y: -100, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, ease: 'backOut' }}\n          className=\"text-5xl md:text-6xl font-extrabold text-white\"\n          style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n        >\n          Puzzle de Exoplanetas\n        </motion.h1>\n\n        {/* Tablero del Puzzle */}\n        <div\n          className=\"relative mx-auto\"\n          style={{\n            width: `${tileSize * gridSize}px`,\n            height: `${tileSize * gridSize}px`,\n            border: '4px solid white',\n            position: 'relative',\n          }}\n        >\n          {tiles.map((tile, index) => {\n            if (tile === totalTiles - 1) return null; // Es el espacio vacío\n            const row = Math.floor(tile / gridSize);\n            const col = tile % gridSize;\n            return (\n              <motion.div\n                key={index}\n                className=\"absolute cursor-pointer border border-black\"\n                style={{\n                  width: `${tileSize}px`,\n                  height: `${tileSize}px`,\n                  backgroundImage: `url(${IMAGE_URL})`,\n                  backgroundSize: `${tileSize * gridSize}px ${tileSize * gridSize}px`,\n                  backgroundPosition: `-${col * tileSize}px -${row * tileSize}px`,\n                  top: `${Math.floor(index / gridSize) * tileSize}px`,\n                  left: `${(index % gridSize) * tileSize}px`,\n                }}\n                onClick={() => handleTileClick(index)}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                transition={{ duration: 0.2 }}\n              />\n            );\n          })}\n        </div>\n\n        {/* Botones de Control */}\n        <div className=\"flex justify-center space-x-6\">\n          <button\n            onClick={startGame}\n            className=\"flex items-center space-x-2 text-white bg-transparent border-2 border-white px-4 py-2 rounded hover:bg-white hover:text-black transition\"\n          >\n            <RefreshCcw className=\"w-5 h-5\" />\n            <span>Reiniciar</span>\n          </button>\n        </div>\n\n        {/* Movimientos y Mensaje de Completado */}\n        <div className=\"text-white\">\n          <p className=\"text-lg\">Movimientos: {moves}</p>\n          {isCompleted && (\n            <motion.p\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ duration: 0.5 }}\n              className=\"mt-4 text-2xl font-bold text-green-400\"\n            >\n              ¡Has completado el puzzle!\n            </motion.p>\n          )}\n        </div>\n\n        {/* Navegación */}\n        <div className=\"flex justify-center space-x-8 mt-8\">\n          {[\n            { icon: User, label: 'Perfil' },\n            { icon: Trophy, label: 'Logros' },\n            { icon: Settings, label: 'Ajustes' },\n            { icon: HelpCircle, label: 'Ayuda' },\n            { icon: Volume2, label: 'Sonido' },\n          ].map((item, index) => (\n            <motion.div\n              key={item.label}\n              initial={{ y: 50, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ duration: 0.5, delay: 0.2 + index * 0.1 }}\n              className=\"text-center\"\n            >\n              <button className=\"group flex flex-col items-center\">\n                <item.icon className=\"w-8 h-8 text-white opacity-80 group-hover:opacity-100 transition-opacity duration-300\" />\n                <span className=\"mt-1 text-white text-sm opacity-80 group-hover:opacity-100 transition-opacity duration-300\">\n                  {item.label}\n                </span>\n              </button>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n\n      {/* Estilos adicionales */}\n      <style jsx>{`\n        @keyframes twinkle {\n          0%,\n          100% {\n            opacity: 0.3;\n          }\n          50% {\n            opacity: 1;\n          }\n        }\n        .star {\n          animation: twinkle infinite;\n        }\n      `}</style>\n    </div>\n  );\n}\n\n// Componente de Fondo de Estrellas\nfunction Starfield() {\n  const [stars, setStars] = useState([]);\n\n  useEffect(() => {\n    const generateStars = () => {\n      return Array.from({ length: 200 }, () => ({\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 2 + 1,\n        opacity: Math.random() * 0.7 + 0.3,\n        twinkleSpeed: Math.random() * 5 + 1,\n      }));\n    };\n    setStars(generateStars());\n  }, []);\n\n  return (\n    <>\n      {stars.map((star, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute bg-white rounded-full star\"\n          style={{\n            left: `${star.x}%`,\n            top: `${star.y}%`,\n            width: `${star.size}px`,\n            height: `${star.size}px`,\n            opacity: star.opacity,\n          }}\n          animate={{ opacity: [0.3, star.opacity, 0.3] }}\n          transition={{\n            duration: star.twinkleSpeed,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      ))}\n    </>\n  );\n}\n```\n\n### Explicación Detallada\n\n1. **Estado y Lógica del Juego**:\n    - **`tiles`**: Representa el estado actual de las piezas del puzzle.\n    - **`emptyTile`**: Índice de la pieza vacía.\n    - **`moves`**: Cuenta los movimientos realizados por el jugador.\n    - **`isCompleted`**: Indica si el puzzle ha sido completado.\n\n2. **Inicialización del Juego**:\n    - Se genera un arreglo de piezas numeradas de 0 a 8 (para un puzzle de 3x3).\n    - Se realiza una mezcla aleatoria de las piezas asegurando que el estado inicial sea resoluble (paridad de inversiones).\n    - Se reinician los contadores y se prepara el estado para jugar.\n\n3. **Interacción del Usuario**:\n    - Al hacer clic en una pieza, se verifica si está adyacente a la pieza vacía.\n    - Si es así, se intercambian las posiciones y se actualiza el estado.\n    - Se incrementa el contador de movimientos y se verifica si el puzzle está completo.\n\n4. **Verificación de Compleción**:\n    - Se comprueba si el arreglo de piezas está en orden secuencial, lo que indica que el jugador ha completado el puzzle.\n\n5. **Renderizado de las Piezas del Puzzle**:\n    - Cada pieza del puzzle muestra una parte de la imagen general mediante `background-position`.\n    - Se utiliza `framer-motion` para animaciones al interactuar con las piezas.\n\n6. **Fondo y Estrellas**:\n    - Se reutiliza el efecto de fondo con estrellas usando el componente `Starfield` para mantener la coherencia estética con tu código original.\n\n7. **Controles y Navegación**:\n    - Botón para reiniciar el juego, estilizado y con iconos.\n    - Iconos de navegación similares a los de tu código original, manteniendo la experiencia de usuario consistente.\n\n8. **Estilos y Animaciones**:\n    - Se utilizan clases de Tailwind CSS para estilos rápidos y responsivos.\n    - `framer-motion` se utiliza para agregar animaciones suaves y atractivas.\n\n### Consideraciones Adicionales\n\n- **Responsividad**: El tamaño del puzzle puede adaptarse para diferentes tamaños de pantalla ajustando el valor de `tileSize` o utilizando unidades relativas.\n- **Mejoras Futuras**:\n    - **Selección de Imágenes**: Permitir al usuario escoger diferentes imágenes para el puzzle.\n    - **Niveles de Dificultad**: Incrementar el tamaño del grid (por ejemplo, 4x4) para aumentar la dificultad.\n    - **Persistencia**: Guardar el progreso del jugador usando localStorage o una base de datos.\n\n### Integración\n\nPara integrar este minijuego en tu aplicación existente, simplemente importa el componente `PuzzleGame` donde desees que aparezca. Por ejemplo:\n\n```javascript\nimport PuzzleGame from './PuzzleGame';\n\nfunction App() {\n  return (\n    <div>\n      <PuzzleGame />\n    </div>\n  );\n}\n\nexport default App;\n```\n\nAsegúrate de ajustar las rutas según la estructura de tu proyecto.\n\n¡Espero que este minijuego complemente perfectamente tu proyecto de exploración de exoplanetas y proporcione una experiencia entretenida a tus usuarios!"
    },
    {
        "role": "user",
        "content": "ok great, improve the white border around the puzzle and remove the options in the botton, as this popup would appear in the middle of the game, and we dont want it"
    },
    {
        "role": "assistant",
        "content": "¡Entendido! A continuación, realizaré las mejoras solicitadas:\n\n1. **Mejorar el borde blanco alrededor del puzzle**:\n   - **Añadir un efecto de neón o resplandor** para que el borde sea más atractivo y se alinee con la temática espacial.\n   - **Redondear las esquinas** del puzzle para darle un aspecto más moderno.\n   - **Añadir una sombra sutil** para destacar el puzzle del fondo.\n\n2. **Eliminar las opciones en la parte inferior**:\n   - Remover la sección de navegación que incluye los iconos de `User`, `Trophy`, `Settings`, `HelpCircle` y `Volume2`.\n\nA continuación, presento el código actualizado con las mejoras mencionadas:\n\n```javascript\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { RefreshCcw } from 'lucide-react';\nimport 'tailwindcss/tailwind.css'; // Asegúrate de que Tailwind CSS esté importado\n\nconst IMAGE_URL = 'https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80';\n\nexport default function PuzzleGame() {\n  const gridSize = 3;\n  const totalTiles = gridSize * gridSize;\n  const [tiles, setTiles] = useState([]);\n  const [emptyTile, setEmptyTile] = useState(totalTiles - 1);\n  const [moves, setMoves] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // Generar disposiciones iniciales\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  const startGame = () => {\n    let initialTiles = Array.from(Array(totalTiles).keys());\n    initialTiles = shuffle(initialTiles);\n    // Asegurarse de que el estado inicial sea resoluble\n    if (!isSolvable(initialTiles)) {\n      // Si no es resoluble, intercambiar dos tiles\n      [initialTiles[0], initialTiles[1]] = [initialTiles[1], initialTiles[0]];\n    }\n    setTiles(initialTiles);\n    setEmptyTile(initialTiles.indexOf(totalTiles - 1));\n    setMoves(0);\n    setIsCompleted(false);\n  };\n\n  const shuffle = (array) => {\n    let shuffled = array.slice();\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const isSolvable = (array) => {\n    let inversionCount = 0;\n    for (let i = 0; i < array.length - 1; i++) {\n      for (let j = i + 1; j < array.length; j++) {\n        if (array[i] > array[j]) inversionCount++;\n      }\n    }\n    return inversionCount % 2 === 0;\n  };\n\n  const handleTileClick = (index) => {\n    if (isAdjacent(index, emptyTile)) {\n      let newTiles = tiles.slice();\n      [newTiles[index], newTiles[emptyTile]] = [newTiles[emptyTile], newTiles[index]];\n      setTiles(newTiles);\n      setEmptyTile(index);\n      setMoves(moves + 1);\n      if (checkCompletion(newTiles)) {\n        setIsCompleted(true);\n      }\n    }\n  };\n\n  const isAdjacent = (index1, index2) => {\n    const row1 = Math.floor(index1 / gridSize);\n    const col1 = index1 % gridSize;\n    const row2 = Math.floor(index2 / gridSize);\n    const col2 = index2 % gridSize;\n    return (\n      (Math.abs(row1 - row2) === 1 && col1 === col2) ||\n      (Math.abs(col1 - col2) === 1 && row1 === row2)\n    );\n  };\n\n  const checkCompletion = (currentTiles) => {\n    for (let i = 0; i < totalTiles; i++) {\n      if (currentTiles[i] !== i) return false;\n    }\n    return true;\n  };\n\n  // Dividir la imagen en piezas\n  const tileSize = 300 / gridSize; // Tamaño de la imagen en px\n\n  return (\n    <div className=\"relative min-h-screen w-full overflow-hidden flex items-center justify-center bg-[url('https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80')] bg-cover bg-center\">\n      {/* Campo de estrellas */}\n      <Starfield />\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n\n      {/* Contenido */}\n      <div className=\"z-10 text-center space-y-8 px-4\">\n        {/* Título */}\n        <motion.h1\n          initial={{ y: -100, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, ease: 'backOut' }}\n          className=\"text-5xl md:text-6xl font-extrabold text-white\"\n          style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n        >\n          Puzzle de Exoplanetas\n        </motion.h1>\n\n        {/* Tablero del Puzzle */}\n        <div\n          className=\"relative mx-auto rounded-lg shadow-2xl\"\n          style={{\n            width: `${tileSize * gridSize}px`,\n            height: `${tileSize * gridSize}px`,\n            border: '6px solid #ffffff',\n            boxShadow: '0 0 20px rgba(255, 255, 255, 0.5)',\n            position: 'relative',\n            borderRadius: '12px',\n              // Añadir un efecto de resplandor\n            backdropFilter: 'blur(2px)',\n          }}\n        >\n          {tiles.map((tile, index) => {\n            if (tile === totalTiles - 1) return null; // Es el espacio vacío\n            const row = Math.floor(tile / gridSize);\n            const col = tile % gridSize;\n            return (\n              <motion.div\n                key={index}\n                className=\"absolute cursor-pointer border border-black rounded-md\"\n                style={{\n                  width: `${tileSize}px`,\n                  height: `${tileSize}px`,\n                  backgroundImage: `url(${IMAGE_URL})`,\n                  backgroundSize: `${tileSize * gridSize}px ${tileSize * gridSize}px`,\n                  backgroundPosition: `-${col * tileSize}px -${row * tileSize}px`,\n                  top: `${Math.floor(index / gridSize) * tileSize}px`,\n                  left: `${(index % gridSize) * tileSize}px`,\n                  borderRadius: '8px',\n                }}\n                onClick={() => handleTileClick(index)}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                transition={{ duration: 0.2 }}\n              />\n            );\n          })}\n        </div>\n\n        {/* Botones de Control */}\n        <div className=\"flex justify-center space-x-6\">\n          <button\n            onClick={startGame}\n            className=\"flex items-center space-x-2 text-white bg-transparent border-2 border-white px-4 py-2 rounded hover:bg-white hover:text-black transition\"\n          >\n            <RefreshCcw className=\"w-5 h-5\" />\n            <span>Reiniciar</span>\n          </button>\n        </div>\n\n        {/* Movimientos y Mensaje de Completado */}\n        <div className=\"text-white\">\n          <p className=\"text-lg\">Movimientos: {moves}</p>\n          {isCompleted && (\n            <motion.p\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ duration: 0.5 }}\n              className=\"mt-4 text-2xl font-bold text-green-400\"\n            >\n              ¡Has completado el puzzle!\n            </motion.p>\n          )}\n        </div>\n      </div>\n\n      {/* Estilos adicionales */}\n      <style jsx>{`\n        @keyframes twinkle {\n          0%,\n          100% {\n            opacity: 0.3;\n          }\n          50% {\n            opacity: 1;\n          }\n        }\n        .star {\n          animation: twinkle infinite;\n        }\n      `}</style>\n    </div>\n  );\n}\n\n// Componente de Fondo de Estrellas\nfunction Starfield() {\n  const [stars, setStars] = useState([]);\n\n  useEffect(() => {\n    const generateStars = () => {\n      return Array.from({ length: 200 }, () => ({\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 2 + 1,\n        opacity: Math.random() * 0.7 + 0.3,\n        twinkleSpeed: Math.random() * 5 + 1,\n      }));\n    };\n    setStars(generateStars());\n  }, []);\n\n  return (\n    <>\n      {stars.map((star, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute bg-white rounded-full star\"\n          style={{\n            left: `${star.x}%`,\n            top: `${star.y}%`,\n            width: `${star.size}px`,\n            height: `${star.size}px`,\n            opacity: star.opacity,\n          }}\n          animate={{ opacity: [0.3, star.opacity, 0.3] }}\n          transition={{\n            duration: star.twinkleSpeed,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      ))}\n    </>\n  );\n}\n```\n\n### **Cambios Realizados**\n\n1. **Mejora del Borde del Puzzle**:\n   - **Aumento del grosor del borde**: Cambié el borde de `4px` a `6px` para hacerlo más prominente.\n   - **Añadido efecto de sombra (`shadow-2xl`)**: Esto crea una profundidad adicional y resalta el puzzle en el entorno.\n   - **Añadido redondeo de las esquinas (`rounded-lg` y `rounded-md`)**: Proporciona un aspecto más suave y moderno.\n   - **Efecto de resplandor**: Utilicé `boxShadow` con un resplandor blanco para asemejar un aura espacial alrededor del puzzle.\n   - **Backdrop Filter**: Añadí un ligero desenfoque para integrarlo mejor con el fondo.\n\n2. **Eliminación de las Opciones en la Parte Inferior**:\n   - **Removido el bloque de navegación** que contenía los iconos de `User`, `Trophy`, `Settings`, `HelpCircle` y `Volume2`. Ahora, la interfaz se centra únicamente en el juego sin distracciones.\n\n3. **Ajustes Adicionales**:\n   - **Redondeo de las piezas del puzzle (`rounded-md`)**: Para mantener la coherencia visual con el borde mejorado.\n   - **Deshabilitación del popup de navegación**: Al eliminar los elementos de navegación, evitamos que interfieran con el juego.\n   - **Optimización de estilos**: Ajusté algunos estilos para asegurar que el diseño sea responsivo y visualmente atractivo.\n\n### **Resultado Final**\n\nEl juego de puzzle ahora presenta un borde blanco más atractivo con efectos de sombra y resplandor, lo que le da una apariencia más cinematográfica y alineada con la temática espacial. Además, al eliminar las opciones de navegación en la parte inferior, la atención del usuario se centra completamente en la experiencia del juego, proporcionando una interfaz más limpia y envolvente.\n\n### **Consideraciones Adicionales**\n\n- **Responsividad**: Asegúrate de probar el juego en diferentes tamaños de pantalla para mantener una experiencia óptima en dispositivos móviles y de escritorio.\n- **Personalización de Efectos**: Puedes ajustar los parámetros de `boxShadow` y `borderRadius` para adaptar mejor el diseño a tus preferencias visuales.\n- **Mejoras Futuras**:\n  - **Efectos Sonoros**: Añadir sonidos al mover las piezas o al completar el puzzle para enriquecer la experiencia del usuario.\n  - **Animaciones de Celebración**: Mostrar animaciones adicionales cuando el usuario completa el puzzle, como fuegos artificiales o destellos.\n\n¡Espero que estas mejoras cumplan con tus expectativas y proporcionen una experiencia de usuario más inmersiva y agradable!"
    },
    {
        "role": "user",
        "content": "ok works fine, but i don't know to solve the puzzle, so in order to show a demo of it working, only shuffle one title, so with one just click the user would win"
    },
    {
        "role": "assistant",
        "content": "¡Entendido! Para facilitar la demostración del minijuego de puzzle y permitir que el usuario gane con un solo clic, realizaremos las siguientes modificaciones:\n\n1. **Configurar el puzzle de manera que solo necesite una jugada para completarse**:\n   - En lugar de mezclar aleatoriamente las piezas, configuraremos el estado inicial del puzzle casi resuelto, dejando solo una pieza fuera de lugar.\n   - Esto permitirá que, al hacer clic en una única pieza, el puzzle se complete automáticamente, demostrando así que el juego funciona correctamente.\n\n2. **Eliminar la lógica de mezcla aleatoria**:\n   - Dado que solo queremos una jugada para resolver el puzzle, podemos eliminar o simplificar la lógica de mezcla existente.\n\n3. **Actualizar el estado inicial del puzzle**:\n   - Configuraremos el arreglo `tiles` de manera que solo una pieza esté desubicada.\n\nA continuación, presento el código actualizado con las modificaciones mencionadas:\n\n```javascript\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { RefreshCcw } from 'lucide-react';\nimport 'tailwindcss/tailwind.css'; // Asegúrate de que Tailwind CSS esté importado\n\nconst IMAGE_URL = 'https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80';\n\nexport default function PuzzleGame() {\n  const gridSize = 3;\n  const totalTiles = gridSize * gridSize;\n  const [tiles, setTiles] = useState([]);\n  const [emptyTile, setEmptyTile] = useState(totalTiles - 1);\n  const [moves, setMoves] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // Configurar el estado inicial con solo una pieza fuera de lugar\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  const startGame = () => {\n    // Estado resuelto del puzzle\n    let initialTiles = Array.from(Array(totalTiles).keys()); // [0,1,2,3,4,5,6,7,8]\n\n    // Realizar una única jugada: intercambiar la última pieza con el espacio vacío\n    [initialTiles[7], initialTiles[8]] = [initialTiles[8], initialTiles[7]]; // [0,1,2,3,4,5,6,8,7]\n\n    setTiles(initialTiles);\n    setEmptyTile(initialTiles.indexOf(totalTiles - 1)); // Índice de la pieza vacía (8) es 7\n    setMoves(0);\n    setIsCompleted(false);\n  };\n\n  const handleTileClick = (index) => {\n    if (isAdjacent(index, emptyTile)) {\n      let newTiles = tiles.slice();\n      [newTiles[index], newTiles[emptyTile]] = [newTiles[emptyTile], newTiles[index]];\n      setTiles(newTiles);\n      setEmptyTile(index);\n      setMoves(moves + 1);\n      if (checkCompletion(newTiles)) {\n        setIsCompleted(true);\n      }\n    }\n  };\n\n  const isAdjacent = (index1, index2) => {\n    const row1 = Math.floor(index1 / gridSize);\n    const col1 = index1 % gridSize;\n    const row2 = Math.floor(index2 / gridSize);\n    const col2 = index2 % gridSize;\n    return (\n      (Math.abs(row1 - row2) === 1 && col1 === col2) ||\n      (Math.abs(col1 - col2) === 1 && row1 === row2)\n    );\n  };\n\n  const checkCompletion = (currentTiles) => {\n    for (let i = 0; i < totalTiles; i++) {\n      if (currentTiles[i] !== i) return false;\n    }\n    return true;\n  };\n\n  // Dividir la imagen en piezas\n  const tileSize = 300 / gridSize; // Tamaño de la imagen en px\n\n  return (\n    <div className=\"relative min-h-screen w-full overflow-hidden flex items-center justify-center bg-[url('https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80')] bg-cover bg-center\">\n      {/* Campo de estrellas */}\n      <Starfield />\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n\n      {/* Contenido */}\n      <div className=\"z-10 text-center space-y-8 px-4\">\n        {/* Título */}\n        <motion.h1\n          initial={{ y: -100, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, ease: 'backOut' }}\n          className=\"text-5xl md:text-6xl font-extrabold text-white\"\n          style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n        >\n          Puzzle de Exoplanetas\n        </motion.h1>\n\n        {/* Tablero del Puzzle */}\n        <div\n          className=\"relative mx-auto rounded-lg shadow-2xl\"\n          style={{\n            width: `${tileSize * gridSize}px`,\n            height: `${tileSize * gridSize}px`,\n            border: '6px solid #ffffff',\n            boxShadow: '0 0 20px rgba(255, 255, 255, 0.5)',\n            position: 'relative',\n            borderRadius: '12px',\n            // Añadir un efecto de resplandor\n            backdropFilter: 'blur(2px)',\n          }}\n        >\n          {tiles.map((tile, index) => {\n            if (tile === totalTiles - 1) return null; // Es el espacio vacío\n            const row = Math.floor(tile / gridSize);\n            const col = tile % gridSize;\n            return (\n              <motion.div\n                key={index}\n                className=\"absolute cursor-pointer border border-black rounded-md\"\n                style={{\n                  width: `${tileSize}px`,\n                  height: `${tileSize}px`,\n                  backgroundImage: `url(${IMAGE_URL})`,\n                  backgroundSize: `${tileSize * gridSize}px ${tileSize * gridSize}px`,\n                  backgroundPosition: `-${col * tileSize}px -${row * tileSize}px`,\n                  top: `${Math.floor(index / gridSize) * tileSize}px`,\n                  left: `${(index % gridSize) * tileSize}px`,\n                  borderRadius: '8px',\n                }}\n                onClick={() => handleTileClick(index)}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                transition={{ duration: 0.2 }}\n              />\n            );\n          })}\n        </div>\n\n        {/* Botones de Control */}\n        <div className=\"flex justify-center space-x-6\">\n          <button\n            onClick={startGame}\n            className=\"flex items-center space-x-2 text-white bg-transparent border-2 border-white px-4 py-2 rounded hover:bg-white hover:text-black transition\"\n          >\n            <RefreshCcw className=\"w-5 h-5\" />\n            <span>Reiniciar</span>\n          </button>\n        </div>\n\n        {/* Movimientos y Mensaje de Completado */}\n        <div className=\"text-white\">\n          <p className=\"text-lg\">Movimientos: {moves}</p>\n          {isCompleted && (\n            <motion.p\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ duration: 0.5 }}\n              className=\"mt-4 text-2xl font-bold text-green-400\"\n            >\n              ¡Has completado el puzzle!\n            </motion.p>\n          )}\n        </div>\n      </div>\n\n      {/* Estilos adicionales */}\n      <style jsx>{`\n        @keyframes twinkle {\n          0%,\n          100% {\n            opacity: 0.3;\n          }\n          50% {\n            opacity: 1;\n          }\n        }\n        .star {\n          animation: twinkle infinite;\n        }\n      `}</style>\n    </div>\n  );\n}\n\n// Componente de Fondo de Estrellas\nfunction Starfield() {\n  const [stars, setStars] = useState([]);\n\n  useEffect(() => {\n    const generateStars = () => {\n      return Array.from({ length: 200 }, () => ({\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 2 + 1,\n        opacity: Math.random() * 0.7 + 0.3,\n        twinkleSpeed: Math.random() * 5 + 1,\n      }));\n    };\n    setStars(generateStars());\n  }, []);\n\n  return (\n    <>\n      {stars.map((star, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute bg-white rounded-full star\"\n          style={{\n            left: `${star.x}%`,\n            top: `${star.y}%`,\n            width: `${star.size}px`,\n            height: `${star.size}px`,\n            opacity: star.opacity,\n          }}\n          animate={{ opacity: [0.3, star.opacity, 0.3] }}\n          transition={{\n            duration: star.twinkleSpeed,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      ))}\n    </>\n  );\n}\n```\n\n### **Cambios Realizados**\n\n1. **Configuración Inicial del Puzzle para una Jugada**:\n   - **Simplificación de la función `startGame`**:\n     - En lugar de mezclar aleatoriamente las piezas, establecemos el arreglo `tiles` en su estado resuelto y luego realizamos un solo intercambio entre la última pieza y el espacio vacío.\n     - Esto resulta en el arreglo `[0,1,2,3,4,5,6,8,7]`, donde solo la pieza `7` está fuera de lugar.\n   - **Código Implementado**:\n     ```javascript\n     const startGame = () => {\n       // Estado resuelto del puzzle\n       let initialTiles = Array.from(Array(totalTiles).keys()); // [0,1,2,3,4,5,6,7,8]\n\n       // Realizar una única jugada: intercambiar la última pieza con el espacio vacío\n       [initialTiles[7], initialTiles[8]] = [initialTiles[8], initialTiles[7]]; // [0,1,2,3,4,5,6,8,7]\n\n       setTiles(initialTiles);\n       setEmptyTile(initialTiles.indexOf(totalTiles - 1)); // Índice de la pieza vacía (8) es 7\n       setMoves(0);\n       setIsCompleted(false);\n     };\n     ```\n   - **Explicación**:\n     - Al inicializar el juego de esta manera, el puzzle está casi resuelto y solo requiere una jugada para completarse. Esto es ideal para una demostración rápida.\n\n2. **Eliminación de la Lógica de Mezcla Aleatoria**:\n   - **Eliminación de funciones innecesarias**:\n     - Se eliminaron las funciones `shuffle` e `isSolvable`, ya que ya no son necesarias.\n   - **Código Eliminado**:\n     ```javascript\n     // Eliminado:\n     const shuffle = (array) => { ... };\n     const isSolvable = (array) => { ... };\n     ```\n\n3. **Actualización del Renderizado de las Piezas**:\n   - **Mantener la lógica de renderizado intacta**:\n     - Las piezas del puzzle se renderizan de la misma manera, utilizando sus índices para determinar su posición en el tablero.\n     - Solo una pieza (la que está fuera de lugar) requiere interacción para completar el puzzle.\n   - **Interacción Simplificada**:\n     - Al hacer clic en la única pieza desubicada (`7`), se intercambiará con el espacio vacío (`8`), completando así el puzzle.\n   \n4. **Ajustes Visuales y de UI**:\n   - **Mantenimiento de los estilos mejorados**:\n     - El borde con efectos de sombra y resplandor se mantiene para una apariencia atractiva.\n   - **Eliminación de las Opciones de Navegación Inferior**:\n     - Como se solicitó anteriormente, las opciones de navegación inferior han sido removidas para no distraer del juego.\n\n### **Resultado Final**\n\nCon estos cambios, el puzzle se presenta en un estado casi resuelto. Al hacer clic en la única pieza desubicada, el puzzle se completará inmediatamente, mostrando el mensaje de felicitación. Esto facilita una demostración eficaz del funcionamiento del juego sin requerir que el usuario resuelva el puzzle manualmente.\n\n### **Captura Visual del Estado Inicial**\n\nPara visualizar mejor cómo se presenta el puzzle al iniciar el juego, aquí hay una representación simplificada:\n\n```\n+---+---+---+\n| 0 | 1 | 2 |\n+---+---+---+\n| 3 | 4 | 5 |\n+---+---+---+\n| 6 | 8 | 7 |\n+---+---+---+\n```\n\n- **Número `8`**: Representa el espacio vacío donde se puede mover una pieza.\n- **Número `7`**: Es la única pieza fuera de lugar y al hacer clic en ella, el puzzle se completará.\n\n### **Consideraciones Adicionales**\n\n- **Facilidad de Demostración**:\n  - Este enfoque permite demostrar rápidamente que el juego funciona correctamente sin la necesidad de mezclar y resolver manualmente el puzzle.\n  \n- **Restablecimiento del Estado**:\n  - Al hacer clic en el botón \"Reiniciar\", el puzzle volverá a su estado inicial, permitiendo repetir la demostración tantas veces como sea necesario.\n  \n- **Expansiones Futuras**:\n  - Para una experiencia de juego más completa, podrías reintroducir la lógica de mezcla aleatoria y permitir diferentes niveles de dificultad según las preferencias del usuario.\n\n### **Integración en tu Aplicación Existente**\n\nPara integrar este minijuego en tu aplicación, asegura que el componente `PuzzleGame` esté correctamente importado y utilizado en la ubicación deseada. Por ejemplo:\n\n```javascript\nimport PuzzleGame from './PuzzleGame';\n\nfunction App() {\n  return (\n    <div>\n      <PuzzleGame />\n    </div>\n  );\n}\n\nexport default App;\n```\n\n### **Conclusión**\n\nCon estas modificaciones, ahora tienes un demo funcional del minijuego de puzzle que permite al usuario ganar con una sola jugada. Esto es ideal para presentaciones rápidas o para verificar que el juego se comporta como se espera antes de implementar funcionalidades más complejas.\n\n¡Espero que estas mejoras cumplan con tus expectativas y faciliten la demostración de tu minijuego de puzzle!"
    },
    {
        "role": "user",
        "content": "Instead of the section \"missions\" add the section \"Descubrimientos\", and inside it, a section for each type of exoplanet (Terrestres, Super-Terrestres, Neptunianos, Gigantes Gaseosos), add an image for each type, and also show a progress bar, each type will have a random number of planets to unlock, and a number of planets unlocked, put the numbers you want to show progress.\n\nUse similar style to this previous code\n\nimport { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Trophy, Star, Zap, Rocket, Book, Globe, Atom, Brain, Heart } from 'lucide-react'\nimport frofilepic from '../img/pfp.png'\n\nexport default function Profile() {\n  const [stars, setStars] = useState([])\n  const [activeTab, setActiveTab] = useState('info')\n  const [showLevelUpModal, setShowLevelUpModal] = useState(false)\n\n  useEffect(() => {\n    const generateStars = () => {\n      return Array.from({ length: 300 }, () => ({\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 3 + 1,\n        opacity: Math.random() * 0.7 + 0.3,\n        twinkleSpeed: Math.random() * 2 + 1,\n      }))\n    }\n    setStars(generateStars())\n  }, [])\n\n//   const missions = [\n//     { name: \"Explorador Novato\", description: \"Completa tu primera misión de exploración\", progress: 100, reward: \"100 XP\" },\n//     { name: \"Cartógrafo Estelar\", description: \"Mapea 5 sistemas estelares\", progress: 60, reward: \"500 XP\" },\n//     { name: \"Diplomático Galáctico\", description: \"Establece alianzas con 3 especies alienígenas\", progress: 33, reward: \"1000 XP\" },\n//     { name: \"Piloto Experto\", description: \"Completa 10 maniobras de vuelo avanzadas\", progress: 70, reward: \"750 XP\" },\n//     { name: \"Científico Cuántico\", description: \"Descifra los misterios de un agujero negro\", progress: 20, reward: \"2000 XP\" }\n//   ]\n\n  const achievements = [\n    { name: \"Primer Contacto\", description: \"Descubre una nueva forma de vida\", icon: Star, obtained: true },\n    { name: \"Navegante Estelar\", description: \"Visita 50 sistemas solares\", icon: Rocket, obtained: false },\n    { name: \"Sabio del Cosmos\", description: \"Alcanza el nivel 50 en conocimientos astronómicos\", icon: Book, obtained: false },\n    { name: \"Héroe Intergaláctico\", description: \"Salva una civilización de la extinción\", icon: Trophy, obtained: true },\n    { name: \"Pionero del Hiperespacio\", description: \"Realiza 100 saltos hiperespaciales\", icon: Zap, obtained: false }\n  ]\n\n  const skills = [\n    { name: \"Pilotaje\", level: 7, icon: Rocket, color: \"text-blue-400\" },\n    { name: \"Diplomacia\", level: 5, icon: Heart, color: \"text-pink-400\" },\n    { name: \"Ciencia\", level: 8, icon: Atom, color: \"text-green-400\" },\n    { name: \"Exploración\", level: 6, icon: Globe, color: \"text-yellow-400\" },\n    { name: \"Estrategia\", level: 4, icon: Brain, color: \"text-purple-400\" }\n  ]\n\n  const dailyChallenges = [\n    { name: \"Exploración Rápida\", description: \"Visita 3 nuevos planetas hoy\", reward: \"50 XP\", completed: false },\n    { name: \"Diplomacia Diaria\", description: \"Interactúa con 2 especies alienígenas\", reward: \"30 XP\", completed: true },\n    { name: \"Estudio Estelar\", description: \"Analiza 5 estrellas diferentes\", reward: \"40 XP\", completed: false }\n  ]\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden flex items-center justify-center bg-[url('https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80')] bg-cover bg-center\">\n      {/* Starfield Background with Twinkling Effect */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black\"></div>\n      {stars.map((star, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute bg-white rounded-full\"\n          style={{\n            left: `${star.x}%`,\n            top: `${star.y}%`,\n            width: `${star.size}px`,\n            height: `${star.size}px`,\n            opacity: star.opacity,\n          }}\n          animate={{ opacity: [0.3, star.opacity, 0.3] }}\n          transition={{\n            duration: star.twinkleSpeed,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      ))}\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n\n      {/* Content */}\n      <div className=\"z-10 text-center space-y-8 px-4 w-full max-w-6xl\">\n        <motion.h1\n          initial={{ y: -50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, ease: 'backOut' }}\n          className=\"text-5xl md:text-6xl font-extrabold text-white mb-8\"\n          style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n        >\n          Perfil del Explorador\n        </motion.h1>\n\n        <motion.div\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-black bg-opacity-50 p-8 rounded-lg border border-white border-opacity-20\"\n        >\n          <div className=\"flex justify-center space-x-4 mb-8\">\n            {['info', \n            // 'misiones', \n            'logros', 'habilidades', 'desafíos'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`text-white text-lg font-semibold px-4 py-2 rounded-full transition-all duration-300 ${\n                  activeTab === tab ? 'bg-white bg-opacity-20' : 'hover:bg-white hover:bg-opacity-10'\n                }`}\n              >\n                {tab.charAt(0).toUpperCase() + tab.slice(1)}\n              </button>\n            ))}\n          </div>\n\n          {activeTab === 'info' && (\n            <div className=\"text-white\">\n              <div className=\"flex items-center justify-center mb-6\">\n                <img src={frofilepic} alt=\"Avatar\" className=\"w-24 h-24 rounded-full border-4 border-white\" />\n                <div className=\"ml-6 text-left\">\n                  <h2 className=\"text-3xl font-bold\">Explorador Alpha</h2>\n                  <p className=\"text-xl\">Rango: Capitán Estelar</p>\n                  <div className=\"mt-2 bg-white bg-opacity-20 rounded-full h-4 w-48\">\n                    <div className=\"bg-blue-500 h-4 rounded-full\" style={{ width: '75%' }}></div>\n                  </div>\n                  <p className=\"text-sm mt-1\">Nivel 25 - 18750 / 25000 XP</p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">152</p>\n                  <p className=\"text-lg\">Misiones Completadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">7</p>\n                  <p className=\"text-lg\">Sistemas Descubiertos</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">3</p>\n                  <p className=\"text-lg\">Alianzas Formadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">12,345</p>\n                  <p className=\"text-lg\">Años Luz Viajados</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* {activeTab === 'misiones' && (\n            <div className=\"space-y-4\">\n              {missions.map((mission, index) => (\n                <motion.div\n                  key={mission.name}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className=\"bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  <h3 className=\"text-xl font-bold text-white\">{mission.name}</h3>\n                  <p className=\"text-gray-300 mb-2\">{mission.description}</p>\n                  <div className=\"w-full bg-gray-700 rounded-full h-2.5\">\n                    <div className=\"bg-blue-600 h-2.5 rounded-full\" style={{ width: `${mission.progress}%` }}></div>\n                  </div>\n                  <div className=\"flex justify-between items-center mt-2\">\n                    <p className=\"text-gray-300\">{mission.progress}% completado</p>\n                    <p className=\"text-yellow-300\">Recompensa: {mission.reward}</p>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )} */}\n\n          {activeTab === 'logros' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={achievement.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`p-4 rounded-lg flex items-center ${\n                    achievement.obtained ? 'bg-yellow-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                  }`}\n                >\n                  <achievement.icon className={`w-10 h-10 mr-4 ${achievement.obtained ? 'text-yellow-400' : 'text-gray-400'}`} />\n                  <div>\n                    <h3 className=\"text-xl font-bold text-white\">{achievement.name}</h3>\n                    <p className=\"text-gray-300\">{achievement.description}</p>\n                  </div>\n                  {achievement.obtained && (\n                    <Star className=\"w-6 h-6 text-yellow-400 ml-auto\" />\n                  )}\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'habilidades' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {skills.map((skill, index) => (\n                <motion.div\n                  key={skill.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className=\"bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  <div className=\"flex items-center mb-2\">\n                    <skill.icon className={`w-8 h-8 ${skill.color} mr-2`} />\n                    <h3 className=\"text-xl font-bold text-white\">{skill.name}</h3>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-1 bg-gray-700 rounded-full h-2.5 mr-2\">\n                      <div className={`${skill.color} h-2.5 rounded-full`} style={{ width: `${(skill.level / 10) * 100}%` }}></div>\n                    </div>\n                    <span className=\"text-white font-bold\">{skill.level}/10</span>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'desafíos' && (\n            <div className=\"space-y-4\">\n              {dailyChallenges.map((challenge, index) => (\n                <motion.div\n                  key={challenge.name}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`p-4 rounded-lg flex items-center ${\n                    challenge.completed ? 'bg-green-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                  }`}\n                >\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-bold text-white\">{challenge.name}</h3>\n                    <p className=\"text-gray-300\">{challenge.description}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-yellow-300\">{challenge.reward}</p>\n                    {challenge.completed ? (\n                      <span className=\"text-green-400\">Completado</span>\n                    ) : (\n                      <button className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors\">\n                        Completar\n                      </button>\n                    )}\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n        </motion.div>\n      </div>\n\n      {/* Level Up Modal */}\n      <AnimatePresence>\n        {showLevelUpModal && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.8 }}\n            className=\"fixed inset-0 flex items-center justify-center z-50\"\n          >\n            <div className=\"bg-black bg-opacity-80 p-8 rounded-lg border-2 border-yellow-400 text-center\">\n              <h2 className=\"text-4xl font-bold text-yellow-400 mb-4\">¡Nivel Alcanzado!</h2>\n              <p className=\"text-2xl text-white mb-6\">Has alcanzado el nivel 26</p>\n              <p className=\"text-xl text-blue-300 mb-4\">Desbloqueas: Mejora de Motor Estelar</p>\n              <button\n                onClick={() => setShowLevelUpModal(false)}\n                className=\"px-6 py-3 bg-yellow-400 text-black rounded-full text-xl font-bold hover:bg-yellow-300 transition-colors\"\n              >\n                ¡Genial!\n              </button>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Additional Styles for Glowing Effects and Animations */}\n      <style jsx>{`\n        @keyframes bounce-slow {\n          0%, 100% {\n            transform: translateY(0);\n          }\n          50% {\n            transform: translateY(-15px);\n          }\n        }\n        .animate-bounce-slow {\n          animation: bounce-slow 4s infinite;\n        }\n      `}</style>\n    </div>\n  )\n}"
    },
    {
        "role": "assistant",
        "content": "¡Claro! A continuación, te mostraré cómo añadir la sección **\"Descubrimientos\"** a tu componente de perfil, siguiendo el estilo existente y utilizando Tailwind CSS, Framer Motion y `lucide-react`. Esta nueva sección incluirá subsecciones para cada tipo de exoplaneta (**Terrestres**, **Super-Terrestres**, **Neptunianos**, **Gigantes Gaseosos**), cada una con una imagen representativa y una barra de progreso que muestra el avance en el descubrimiento de planetas.\n\n### **Pasos a Seguir**\n\n1. **Definir los Datos de Descubrimientos**:\n   - Crear un arreglo de objetos que contenga los tipos de exoplanetas, sus imágenes, el número total de planetas a desbloquear y el número actualmente desbloqueados.\n   \n2. **Actualizar las Pestañas de Navegación**:\n   - Añadir una nueva pestaña llamada **\"Descubrimientos\"**.\n   \n3. **Crear la Sección \"Descubrimientos\"**:\n   - Para cada tipo de exoplaneta, mostrar una imagen, el nombre del tipo y una barra de progreso que indique el avance.\n   \n4. **Mantener la Consistencia Visual**:\n   - Utilizar clases de Tailwind CSS y componentes de Framer Motion para asegurar que el diseño sea coherente con el resto del perfil.\n\n### **Implementación**\n\nA continuación, te presento el código actualizado del componente `Profile` con la nueva sección **\"Descubrimientos\"**:\n\n```javascript\nimport { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Trophy, Star, Zap, Rocket, Book, Globe, Atom, Brain, Heart } from 'lucide-react'\nimport frofilepic from '../img/pfp.png'\n\n// Importa o define las URLs de las imágenes para cada tipo de exoplaneta\nconst exoplanetImages = {\n  Terrestres: 'https://via.placeholder.com/100?text=Terrestres',\n  'Super-Terrestres': 'https://via.placeholder.com/100?text=Super-Terrestres',\n  Neptunianos: 'https://via.placeholder.com/100?text=Neptunianos',\n  'Gigantes Gaseosos': 'https://via.placeholder.com/100?text=Gigantes+Gaseosos',\n}\n\nexport default function Profile() {\n  const [stars, setStars] = useState([])\n  const [activeTab, setActiveTab] = useState('info')\n  const [showLevelUpModal, setShowLevelUpModal] = useState(false)\n\n  useEffect(() => {\n    const generateStars = () => {\n      return Array.from({ length: 300 }, () => ({\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 3 + 1,\n        opacity: Math.random() * 0.7 + 0.3,\n        twinkleSpeed: Math.random() * 2 + 1,\n      }))\n    }\n    setStars(generateStars())\n  }, [])\n\n  const achievements = [\n    { name: \"Primer Contacto\", description: \"Descubre una nueva forma de vida\", icon: Star, obtained: true },\n    { name: \"Navegante Estelar\", description: \"Visita 50 sistemas solares\", icon: Rocket, obtained: false },\n    { name: \"Sabio del Cosmos\", description: \"Alcanza el nivel 50 en conocimientos astronómicos\", icon: Book, obtained: false },\n    { name: \"Héroe Intergaláctico\", description: \"Salva una civilización de la extinción\", icon: Trophy, obtained: true },\n    { name: \"Pionero del Hiperespacio\", description: \"Realiza 100 saltos hiperespaciales\", icon: Zap, obtained: false }\n  ]\n\n  const skills = [\n    { name: \"Pilotaje\", level: 7, icon: Rocket, color: \"text-blue-400\" },\n    { name: \"Diplomacia\", level: 5, icon: Heart, color: \"text-pink-400\" },\n    { name: \"Ciencia\", level: 8, icon: Atom, color: \"text-green-400\" },\n    { name: \"Exploración\", level: 6, icon: Globe, color: \"text-yellow-400\" },\n    { name: \"Estrategia\", level: 4, icon: Brain, color: \"text-purple-400\" }\n  ]\n\n  const dailyChallenges = [\n    { name: \"Exploración Rápida\", description: \"Visita 3 nuevos planetas hoy\", reward: \"50 XP\", completed: false },\n    { name: \"Diplomacia Diaria\", description: \"Interactúa con 2 especies alienígenas\", reward: \"30 XP\", completed: true },\n    { name: \"Estudio Estelar\", description: \"Analiza 5 estrellas diferentes\", reward: \"40 XP\", completed: false }\n  ]\n\n  // Datos para Descubrimientos\n  const discoveries = [\n    { \n      type: \"Terrestres\", \n      image: exoplanetImages.Terrestres, \n      total: 10, \n      unlocked: 7 \n    },\n    { \n      type: \"Super-Terrestres\", \n      image: exoplanetImages['Super-Terrestres'], \n      total: 8, \n      unlocked: 5 \n    },\n    { \n      type: \"Neptunianos\", \n      image: exoplanetImages.Neptunianos, \n      total: 12, \n      unlocked: 9 \n    },\n    { \n      type: \"Gigantes Gaseosos\", \n      image: exoplanetImages['Gigantes Gaseosos'], \n      total: 15, \n      unlocked: 10 \n    },\n  ]\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden flex items-center justify-center bg-[url('https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80')] bg-cover bg-center\">\n      {/* Starfield Background with Twinkling Effect */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black\"></div>\n      {stars.map((star, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute bg-white rounded-full\"\n          style={{\n            left: `${star.x}%`,\n            top: `${star.y}%`,\n            width: `${star.size}px`,\n            height: `${star.size}px`,\n            opacity: star.opacity,\n          }}\n          animate={{ opacity: [0.3, star.opacity, 0.3] }}\n          transition={{\n            duration: star.twinkleSpeed,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      ))}\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n\n      {/* Content */}\n      <div className=\"z-10 text-center space-y-8 px-4 w-full max-w-6xl\">\n        <motion.h1\n          initial={{ y: -50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, ease: 'backOut' }}\n          className=\"text-5xl md:text-6xl font-extrabold text-white mb-8\"\n          style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n        >\n          Perfil del Explorador\n        </motion.h1>\n\n        <motion.div\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-black bg-opacity-50 p-8 rounded-lg border border-white border-opacity-20\"\n        >\n          <div className=\"flex justify-center space-x-4 mb-8\">\n            {['info', 'logros', 'habilidades', 'desafíos', 'descubrimientos'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`text-white text-lg font-semibold px-4 py-2 rounded-full transition-all duration-300 ${\n                  activeTab === tab ? 'bg-white bg-opacity-20' : 'hover:bg-white hover:bg-opacity-10'\n                }`}\n              >\n                {tab.charAt(0).toUpperCase() + tab.slice(1)}\n              </button>\n            ))}\n          </div>\n\n          {activeTab === 'info' && (\n            <div className=\"text-white\">\n              <div className=\"flex items-center justify-center mb-6\">\n                <img src={frofilepic} alt=\"Avatar\" className=\"w-24 h-24 rounded-full border-4 border-white\" />\n                <div className=\"ml-6 text-left\">\n                  <h2 className=\"text-3xl font-bold\">Explorador Alpha</h2>\n                  <p className=\"text-xl\">Rango: Capitán Estelar</p>\n                  <div className=\"mt-2 bg-white bg-opacity-20 rounded-full h-4 w-48\">\n                    <div className=\"bg-blue-500 h-4 rounded-full\" style={{ width: '75%' }}></div>\n                  </div>\n                  <p className=\"text-sm mt-1\">Nivel 25 - 18750 / 25000 XP</p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">152</p>\n                  <p className=\"text-lg\">Misiones Completadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">7</p>\n                  <p className=\"text-lg\">Sistemas Descubiertos</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">3</p>\n                  <p className=\"text-lg\">Alianzas Formadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">12,345</p>\n                  <p className=\"text-lg\">Años Luz Viajados</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'logros' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={achievement.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`p-4 rounded-lg flex items-center ${\n                    achievement.obtained ? 'bg-yellow-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                  }`}\n                >\n                  <achievement.icon className={`w-10 h-10 mr-4 ${achievement.obtained ? 'text-yellow-400' : 'text-gray-400'}`} />\n                  <div>\n                    <h3 className=\"text-xl font-bold text-white\">{achievement.name}</h3>\n                    <p className=\"text-gray-300\">{achievement.description}</p>\n                  </div>\n                  {achievement.obtained && (\n                    <Star className=\"w-6 h-6 text-yellow-400 ml-auto\" />\n                  )}\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'habilidades' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {skills.map((skill, index) => (\n                <motion.div\n                  key={skill.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className=\"bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  <div className=\"flex items-center mb-2\">\n                    <skill.icon className={`w-8 h-8 ${skill.color} mr-2`} />\n                    <h3 className=\"text-xl font-bold text-white\">{skill.name}</h3>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-1 bg-gray-700 rounded-full h-2.5 mr-2\">\n                      <div className={`${skill.color} h-2.5 rounded-full`} style={{ width: `${(skill.level / 10) * 100}%` }}></div>\n                    </div>\n                    <span className=\"text-white font-bold\">{skill.level}/10</span>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'desafíos' && (\n            <div className=\"space-y-4\">\n              {dailyChallenges.map((challenge, index) => (\n                <motion.div\n                  key={challenge.name}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`p-4 rounded-lg flex items-center ${\n                    challenge.completed ? 'bg-green-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                  }`}\n                >\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-bold text-white\">{challenge.name}</h3>\n                    <p className=\"text-gray-300\">{challenge.description}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-yellow-300\">{challenge.reward}</p>\n                    {challenge.completed ? (\n                      <span className=\"text-green-400\">Completado</span>\n                    ) : (\n                      <button className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors\">\n                        Completar\n                      </button>\n                    )}\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'descubrimientos' && (\n            <div className=\"space-y-6\">\n              {discoveries.map((discovery, index) => (\n                <motion.div\n                  key={discovery.type}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.2 }}\n                  className=\"flex items-center bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  {/* Imagen del Tipo de Exoplaneta */}\n                  <img src={discovery.image} alt={discovery.type} className=\"w-20 h-20 rounded-full mr-6\" />\n\n                  {/* Información y Barra de Progreso */}\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-2xl font-bold text-white\">{discovery.type}</h3>\n                    <p className=\"text-gray-300 mb-2\">{discovery.unlocked} de {discovery.total} planetas desbloqueados</p>\n                    {/* Barra de Progreso */}\n                    <div className=\"w-full bg-gray-700 rounded-full h-3\">\n                      <div \n                        className=\"bg-green-500 h-3 rounded-full\" \n                        style={{ width: `${(discovery.unlocked / discovery.total) * 100}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n        </motion.div>\n      </div>\n\n      {/* Level Up Modal */}\n      <AnimatePresence>\n        {showLevelUpModal && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.8 }}\n            className=\"fixed inset-0 flex items-center justify-center z-50\"\n          >\n            <div className=\"bg-black bg-opacity-80 p-8 rounded-lg border-2 border-yellow-400 text-center\">\n              <h2 className=\"text-4xl font-bold text-yellow-400 mb-4\">¡Nivel Alcanzado!</h2>\n              <p className=\"text-2xl text-white mb-6\">Has alcanzado el nivel 26</p>\n              <p className=\"text-xl text-blue-300 mb-4\">Desbloqueas: Mejora de Motor Estelar</p>\n              <button\n                onClick={() => setShowLevelUpModal(false)}\n                className=\"px-6 py-3 bg-yellow-400 text-black rounded-full text-xl font-bold hover:bg-yellow-300 transition-colors\"\n              >\n                ¡Genial!\n              </button>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Additional Styles for Glowing Effects and Animations */}\n      <style jsx>{`\n        @keyframes bounce-slow {\n          0%, 100% {\n            transform: translateY(0);\n          }\n          50% {\n            transform: translateY(-15px);\n          }\n        }\n        .animate-bounce-slow {\n          animation: bounce-slow 4s infinite;\n        }\n      `}</style>\n    </div>\n  )\n}\n```\n\n### **Explicación Detallada**\n\n1. **Definir las Imágenes de Exoplanetas**:\n   - He añadido un objeto `exoplanetImages` que contiene las URLs de las imágenes para cada tipo de exoplaneta. Actualmente, utilizo **placeholder images** (`https://via.placeholder.com/...`). Deberías reemplazar estas URLs con las imágenes reales que desees utilizar.\n   ```javascript\n   const exoplanetImages = {\n     Terrestres: 'https://via.placeholder.com/100?text=Terrestres',\n     'Super-Terrestres': 'https://via.placeholder.com/100?text=Super-Terrestres',\n     Neptunianos: 'https://via.placeholder.com/100?text=Neptunianos',\n     'Gigantes Gaseosos': 'https://via.placeholder.com/100?text=Gigantes+Gaseosos',\n   }\n   ```\n\n2. **Datos para Descubrimientos**:\n   - He creado un arreglo `discoveries` que contiene objetos para cada tipo de exoplaneta. Cada objeto incluye el tipo de exoplaneta, la URL de su imagen, el número total de planetas a desbloquear y el número de planetas actualmente desbloqueados.\n   ```javascript\n   const discoveries = [\n     { \n       type: \"Terrestres\", \n       image: exoplanetImages.Terrestres, \n       total: 10, \n       unlocked: 7 \n     },\n     { \n       type: \"Super-Terrestres\", \n       image: exoplanetImages['Super-Terrestres'], \n       total: 8, \n       unlocked: 5 \n     },\n     { \n       type: \"Neptunianos\", \n       image: exoplanetImages.Neptunianos, \n       total: 12, \n       unlocked: 9 \n     },\n     { \n       type: \"Gigantes Gaseosos\", \n       image: exoplanetImages['Gigantes Gaseosos'], \n       total: 15, \n       unlocked: 10 \n     },\n   ]\n   ```\n\n3. **Actualizar las Pestañas de Navegación**:\n   - He añadido **'descubrimientos'** al arreglo de pestañas y a la lógica de selección de pestañas.\n   ```javascript\n   {['info', 'logros', 'habilidades', 'desafíos', 'descubrimientos'].map((tab) => (\n     <button\n       key={tab}\n       onClick={() => setActiveTab(tab)}\n       className={`text-white text-lg font-semibold px-4 py-2 rounded-full transition-all duration-300 ${\n         activeTab === tab ? 'bg-white bg-opacity-20' : 'hover:bg-white hover:bg-opacity-10'\n       }`}\n     >\n       {tab.charAt(0).toUpperCase() + tab.slice(1)}\n     </button>\n   ))}\n   ```\n\n4. **Crear la Sección \"Descubrimientos\"**:\n   - He añadido un bloque de JSX que se renderiza cuando `activeTab` es **'descubrimientos'**. Este bloque itera sobre el arreglo `discoveries` y muestra cada tipo de exoplaneta con su imagen y una barra de progreso.\n   ```javascript\n   {activeTab === 'descubrimientos' && (\n     <div className=\"space-y-6\">\n       {discoveries.map((discovery, index) => (\n         <motion.div\n           key={discovery.type}\n           initial={{ opacity: 0, y: 20 }}\n           animate={{ opacity: 1, y: 0 }}\n           transition={{ duration: 0.5, delay: index * 0.2 }}\n           className=\"flex items-center bg-white bg-opacity-10 p-4 rounded-lg\"\n         >\n           {/* Imagen del Tipo de Exoplaneta */}\n           <img src={discovery.image} alt={discovery.type} className=\"w-20 h-20 rounded-full mr-6\" />\n\n           {/* Información y Barra de Progreso */}\n           <div className=\"flex-1\">\n             <h3 className=\"text-2xl font-bold text-white\">{discovery.type}</h3>\n             <p className=\"text-gray-300 mb-2\">{discovery.unlocked} de {discovery.total} planetas desbloqueados</p>\n             {/* Barra de Progreso */}\n             <div className=\"w-full bg-gray-700 rounded-full h-3\">\n               <div \n                 className=\"bg-green-500 h-3 rounded-full\" \n                 style={{ width: `${(discovery.unlocked / discovery.total) * 100}%` }}\n               ></div>\n             </div>\n           </div>\n         </motion.div>\n       ))}\n     </div>\n   )}\n   ```\n\n   **Detalles de la Sección**:\n   - **Imagen del Exoplaneta**: Cada tipo de exoplaneta muestra una imagen circular (`rounded-full`) con un margen derecho para separar la imagen de la información.\n   - **Información**: Muestra el nombre del tipo de exoplaneta y el progreso en el descubrimiento de planetas.\n   - **Barra de Progreso**: Utiliza una barra gris como fondo y una barra verde que indica el porcentaje de planetas desbloqueados.\n\n5. **Estilos y Animaciones**:\n   - Los estilos utilizados mantienen la coherencia con el resto del componente, utilizando fondos semitransparentes, bordes redondeados y animaciones suaves con Framer Motion para transiciones atractivas.\n\n6. **Imágenes Placeholder**:\n   - Actualmente, las imágenes de exoplanetas son **placeholder images**. Debes reemplazar las URLs en el objeto `exoplanetImages` con las imágenes reales que deseas utilizar para cada tipo de exoplaneta.\n\n### **Visualización de la Sección \"Descubrimientos\"**\n\nAquí tienes una representación simplificada de cómo se verá la nueva sección:\n\n```\n+------------------------------------------+\n|                                          |\n|  [Imagen Terrestres]  Terrestres         |\n|                      7 de 10 planetas    |\n|  [=========             ]                |\n|                                          |\n+------------------------------------------+\n\n+------------------------------------------+\n|                                          |\n|  [Imagen Super-Terrestres] Super-Terrestres |\n|                      5 de 8 planetas     |\n|  [======            ]                    |\n|                                          |\n+------------------------------------------+\n\n+------------------------------------------+\n|                                          |\n|  [Imagen Neptunianos] Neptunianos         |\n|                      9 de 12 planetas    |\n|  [=========          ]                    |\n|                                          |\n+------------------------------------------+\n\n+------------------------------------------+\n|                                          |\n|  [Imagen Gigantes Gaseosos] Gigantes Gaseosos |\n|                      10 de 15 planetas    |\n|  [==========        ]                    |\n|                                          |\n+------------------------------------------+\n```\n\n### **Resultado Final**\n\nCon estas modificaciones, tu componente de perfil ahora incluye una sección **\"Descubrimientos\"** que muestra diferentes tipos de exoplanetas con imágenes y barras de progreso que indican cuántos planetas de cada tipo han sido descubiertos. La sección mantiene la estética y la funcionalidad coherente con el resto del perfil, ofreciendo una experiencia de usuario inmersiva y atractiva.\n\n### **Consideraciones Adicionales**\n\n1. **Responsividad**:\n   - Asegúrate de probar la sección en diferentes tamaños de pantalla. Puedes ajustar las clases de Tailwind (`w-20 h-20`, `text-2xl`, etc.) para mejorar la visualización en dispositivos móviles.\n\n2. **Interactividad**:\n   - Podrías añadir interactividad adicional, como **tooltips** al pasar el cursor sobre las barras de progreso, mostrando más información sobre la meta de descubrimientos o los beneficios de desbloquear más planetas.\n\n3. **Actualización Dinámica**:\n   - Si tienes una base de datos o un estado global que maneja los descubrimientos, puedes actualizar el arreglo `discoveries` dinámicamente en lugar de tener valores estáticos. Esto permitirá que la interfaz refleje el progreso real del usuario.\n\n4. **Optimización de Imágenes**:\n   - Utiliza imágenes optimizadas para mejorar el tiempo de carga y la experiencia del usuario. Considera usar formatos como WebP o SVG si son adecuados para tus necesidades.\n\n5. **Accesibilidad**:\n   - Asegúrate de que las imágenes tengan etiquetas `alt` descriptivas para mejorar la accesibilidad.\n   - Utiliza colores con suficiente contraste para que la información sea fácilmente legible para todos los usuarios.\n\n### **Conclusión**\n\nEstas adiciones mejorarán significativamente tu componente de perfil, proporcionando a los usuarios una manera clara y atractiva de seguir su progreso en los descubrimientos de exoplanetas. Mantener una interfaz visualmente coherente y funcional es crucial para ofrecer una experiencia de usuario satisfactoria.\n\n¡Espero que estas mejoras te sean de gran ayuda en tu proyecto!"
    },
    {
        "role": "user",
        "content": "Really great, now inside of this, in each type, allow the user to press a button in order to show the planets individually, in a subsection, show the name, and various information, and a button to \"learn more\" for each unlocked one, and the locked ones (that have not been discovered yet) show question marks, or a lock icon, or something that you think is better"
    },
    {
        "role": "assistant",
        "content": "¡Me alegra saber que las modificaciones anteriores fueron de tu agrado! Ahora, procederemos a implementar la nueva funcionalidad solicitada: **añadir la sección \"Descubrimientos\"** con subsecciones para cada tipo de exoplaneta (**Terrestres**, **Super-Terrestres**, **Neptunianos**, **Gigantes Gaseosos**). En cada tipo, permitiremos al usuario expandir para ver los planetas individuales, mostrando información detallada para los planetas desbloqueados y un indicador para los bloqueados.\n\n### **Resumen de las Modificaciones**\n\n1. **Actualizar la Estructura de Datos**:\n   - Añadiremos una lista de planetas para cada tipo de exoplaneta, incluyendo propiedades como `name`, `info` y `unlocked`.\n   \n2. **Estado de Expansión**:\n   - Implementaremos un estado para manejar qué secciones de descubrimientos están expandidas.\n\n3. **Interfaz de Usuario**:\n   - Para cada tipo de exoplaneta, añadiremos un botón que permite expandir o colapsar la lista de planetas.\n   - Dentro de cada subsección expandida, mostraremos los planetas individuales con su información y botones correspondientes.\n\n4. **Estilos y Animaciones**:\n   - Mantendremos la coherencia visual utilizando Tailwind CSS y Framer Motion para transiciones fluidas.\n   - Utilizaremos íconos de bloqueo de `lucide-react` para indicar planetas aún no descubiertos.\n\n### **Implementación Detallada**\n\nA continuación, te presento el código actualizado del componente `Profile` con las nuevas funcionalidades integradas.\n\n```javascript\nimport { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Trophy, Star, Zap, Rocket, Book, Globe, Atom, Brain, Heart, Lock } from 'lucide-react'\nimport frofilepic from '../img/pfp.png'\n\n// Importa o define las URLs de las imágenes para cada tipo de exoplaneta\nconst exoplanetImages = {\n  Terrestres: 'https://via.placeholder.com/100?text=Terrestres',\n  'Super-Terrestres': 'https://via.placeholder.com/100?text=Super-Terrestres',\n  Neptunianos: 'https://via.placeholder.com/100?text=Neptunianos',\n  'Gigantes Gaseosos': 'https://via.placeholder.com/100?text=Gigantes+Gaseosos',\n}\n\n// Definir las imágenes para planetas individuales (Placeholder)\nconst planetImages = {\n  'Planeta A': 'https://via.placeholder.com/80?text=Planeta+A',\n  'Planeta B': 'https://via.placeholder.com/80?text=Planeta+B',\n  'Planeta C': 'https://via.placeholder.com/80?text=Planeta+C',\n  'Planeta D': 'https://via.placeholder.com/80?text=Planeta+D',\n  'Planeta E': 'https://via.placeholder.com/80?text=Planeta+E',\n  'Planeta F': 'https://via.placeholder.com/80?text=Planeta+F',\n  // Añade más imágenes según sea necesario\n}\n\nexport default function Profile() {\n  const [stars, setStars] = useState([])\n  const [activeTab, setActiveTab] = useState('info')\n  const [showLevelUpModal, setShowLevelUpModal] = useState(false)\n  const [expandedDiscoveries, setExpandedDiscoveries] = useState({}) // Mapeo de tipos a estados de expansión\n\n  useEffect(() => {\n    const generateStars = () => {\n      return Array.from({ length: 300 }, () => ({\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 3 + 1,\n        opacity: Math.random() * 0.7 + 0.3,\n        twinkleSpeed: Math.random() * 2 + 1,\n      }))\n    }\n    setStars(generateStars())\n  }, [])\n\n  const achievements = [\n    { name: \"Primer Contacto\", description: \"Descubre una nueva forma de vida\", icon: Star, obtained: true },\n    { name: \"Navegante Estelar\", description: \"Visita 50 sistemas solares\", icon: Rocket, obtained: false },\n    { name: \"Sabio del Cosmos\", description: \"Alcanza el nivel 50 en conocimientos astronómicos\", icon: Book, obtained: false },\n    { name: \"Héroe Intergaláctico\", description: \"Salva una civilización de la extinción\", icon: Trophy, obtained: true },\n    { name: \"Pionero del Hiperespacio\", description: \"Realiza 100 saltos hiperespaciales\", icon: Zap, obtained: false }\n  ]\n\n  const skills = [\n    { name: \"Pilotaje\", level: 7, icon: Rocket, color: \"text-blue-400\" },\n    { name: \"Diplomacia\", level: 5, icon: Heart, color: \"text-pink-400\" },\n    { name: \"Ciencia\", level: 8, icon: Atom, color: \"text-green-400\" },\n    { name: \"Exploración\", level: 6, icon: Globe, color: \"text-yellow-400\" },\n    { name: \"Estrategia\", level: 4, icon: Brain, color: \"text-purple-400\" }\n  ]\n\n  const dailyChallenges = [\n    { name: \"Exploración Rápida\", description: \"Visita 3 nuevos planetas hoy\", reward: \"50 XP\", completed: false },\n    { name: \"Diplomacia Diaria\", description: \"Interactúa con 2 especies alienígenas\", reward: \"30 XP\", completed: true },\n    { name: \"Estudio Estelar\", description: \"Analiza 5 estrellas diferentes\", reward: \"40 XP\", completed: false }\n  ]\n\n  // Datos para Descubrimientos incluyendo planetas\n  const discoveries = [\n    { \n      type: \"Terrestres\", \n      image: exoplanetImages.Terrestres, \n      total: 10, \n      unlocked: 7,\n      planets: [\n        { name: \"Planeta A\", info: \"Un planeta rocoso similar a la Tierra.\", unlocked: true },\n        { name: \"Planeta B\", info: \"Con atmósfera densa y múltiples océanos.\", unlocked: true },\n        { name: \"Planeta C\", info: \"Ubicado en la zona habitable de su estrella.\", unlocked: true },\n        { name: \"Planeta D\", info: \"Posee una luna gigante.\", unlocked: true },\n        { name: \"Planeta E\", info: \"Tiene signos de actividad geológica.\", unlocked: true },\n        { name: \"Planeta F\", info: \"Presenta variaciones climáticas extremas.\", unlocked: true },\n        { name: \"Planeta G\", info: \"Cuenta con sistemas de vida alienígena.\", unlocked: true },\n        { name: \"Planeta H\", info: \"Área de biodiversidad excepcional.\", unlocked: false },\n        { name: \"Planeta I\", info: \"Rodeado por un anillo luminoso.\", unlocked: false },\n        { name: \"Planeta J\", info: \"Centro de investigaciones científicas.\", unlocked: false },\n      ]\n    },\n    { \n      type: \"Super-Terrestres\", \n      image: exoplanetImages['Super-Terrestres'], \n      total: 8, \n      unlocked: 5,\n      planets: [\n        { name: \"Planeta K\", info: \"Tamaño mayor que la Tierra pero con condiciones habitables.\", unlocked: true },\n        { name: \"Planeta L\", info: \"Posee múltiples continentes flotantes.\", unlocked: true },\n        { name: \"Planeta M\", info: \"Con aire respirable pero con temperaturas elevadas.\", unlocked: true },\n        { name: \"Planeta N\", info: \"Tierra doble en un sistema binario.\", unlocked: true },\n        { name: \"Planeta O\", info: \"Con actividad volcánica intensa.\", unlocked: true },\n        { name: \"Planeta P\", info: \"Zona de migración de especies avanzadas.\", unlocked: false },\n        { name: \"Planeta Q\", info: \"Techo de cristal natural en su atmósfera.\", unlocked: false },\n        { name: \"Planeta R\", info: \"Recursos minerales invaluables.\", unlocked: false },\n      ]\n    },\n    { \n      type: \"Neptunianos\", \n      image: exoplanetImages.Neptunianos, \n      total: 12, \n      unlocked: 9,\n      planets: [\n        { name: \"Planeta S\", info: \"Composición principalmente de hielo y gas.\", unlocked: true },\n        { name: \"Planeta T\", info: \"Tierra gaseosa con tormentas electrostáticas.\", unlocked: true },\n        { name: \"Planeta U\", info: \"Posee un sistema de anillos espectacular.\", unlocked: true },\n        { name: \"Planeta V\", info: \"Con océanos de amoníaco líquido.\", unlocked: true },\n        { name: \"Planeta W\", info: \"Ubicado en la periferia de su galaxia.\", unlocked: true },\n        { name: \"Planeta X\", info: \"Con múltiples lunas heladas.\", unlocked: true },\n        { name: \"Planeta Y\", info: \"Sistema meteorológico único y complejo.\", unlocked: true },\n        { name: \"Planeta Z\", info: \"Reserva de energías renovables extraterrestres.\", unlocked: true },\n        { name: \"Planeta AA\", info: \"Cúpulas geodésicas naturales en la superficie.\", unlocked: false },\n        { name: \"Planeta AB\", info: \"Con hendiduras minerales profundas.\", unlocked: false },\n        { name: \"Planeta AC\", info: \"Zona de investigación científica avanzada.\", unlocked: false },\n        { name: \"Planeta AD\", info: \"Refugio de especies acuáticas inteligentes.\", unlocked: false },\n      ]\n    },\n    { \n      type: \"Gigantes Gaseosos\", \n      image: exoplanetImages['Gigantes Gaseosos'], \n      total: 15, \n      unlocked: 10,\n      planets: [\n        { name: \"Planeta AE\", info: \"Enorme planeta con capas de gas iridiscentes.\", unlocked: true },\n        { name: \"Planeta AF\", info: \"Con sistemas de coloraciones atmosféricas cambiantes.\", unlocked: true },\n        { name: \"Planeta AG\", info: \"Posee una estación espacial natural en sus nubes.\", unlocked: true },\n        { name: \"Planeta AH\", info: \"Con internalización de torres de energía.\", unlocked: true },\n        { name: \"Planeta AI\", info: \"Presencia de gigantescas tormentas eléctricas.\", unlocked: true },\n        { name: \"Planeta AJ\", info: \"Órbita cercana a una estrella de neutrones.\", unlocked: true },\n        { name: \"Planeta AK\", info: \"Con múltiples anillos compuestos por partículas de hielo.\", unlocked: true },\n        { name: \"Planeta AL\", info: \"Centro de nexos energéticos interplanetarios.\", unlocked: true },\n        { name: \"Planeta AM\", info: \"Habitat de criaturas aéreas prehistóricas.\", unlocked: true },\n        { name: \"Planeta AN\", info: \"Reservorio de materiales de construcción avanzados.\", unlocked: true },\n        { name: \"Planeta AO\", info: \"Conducción de estudios atmosféricos profundos.\", unlocked: false },\n        { name: \"Planeta AP\", info: \"Base de investigaciones arqueológicas extraterrestres.\", unlocked: false },\n        { name: \"Planeta AQ\", info: \"Infraestructura energética autosostenible.\", unlocked: false },\n        { name: \"Planeta AR\", info: \"Área de terapias climáticas intergalácticas.\", unlocked: false },\n        { name: \"Planeta AS\", info: \"Núcleo de investigación de tecnologías cuánticas.\", unlocked: false },\n      ]\n    },\n  ]\n\n  // Función para alternar la expansión de una categoría de descubrimientos\n  const toggleExpansion = (type) => {\n    setExpandedDiscoveries(prevState => ({\n      ...prevState,\n      [type]: !prevState[type]\n    }))\n  }\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden flex items-center justify-center bg-[url('https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80')] bg-cover bg-center\">\n      {/* Starfield Background with Twinkling Effect */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black\"></div>\n      {stars.map((star, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute bg-white rounded-full\"\n          style={{\n            left: `${star.x}%`,\n            top: `${star.y}%`,\n            width: `${star.size}px`,\n            height: `${star.size}px`,\n            opacity: star.opacity,\n          }}\n          animate={{ opacity: [0.3, star.opacity, 0.3] }}\n          transition={{\n            duration: star.twinkleSpeed,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      ))}\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n\n      {/* Content */}\n      <div className=\"z-10 text-center space-y-8 px-4 w-full max-w-6xl\">\n        <motion.h1\n          initial={{ y: -50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, ease: 'backOut' }}\n          className=\"text-5xl md:text-6xl font-extrabold text-white mb-8\"\n          style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n        >\n          Perfil del Explorador\n        </motion.h1>\n\n        <motion.div\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-black bg-opacity-50 p-8 rounded-lg border border-white border-opacity-20\"\n        >\n          <div className=\"flex justify-center space-x-4 mb-8\">\n            {['info', 'logros', 'habilidades', 'desafíos', 'descubrimientos'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`text-white text-lg font-semibold px-4 py-2 rounded-full transition-all duration-300 ${\n                  activeTab === tab ? 'bg-white bg-opacity-20' : 'hover:bg-white hover:bg-opacity-10'\n                }`}\n              >\n                {tab.charAt(0).toUpperCase() + tab.slice(1)}\n              </button>\n            ))}\n          </div>\n\n          {activeTab === 'info' && (\n            <div className=\"text-white\">\n              <div className=\"flex items-center justify-center mb-6\">\n                <img src={frofilepic} alt=\"Avatar\" className=\"w-24 h-24 rounded-full border-4 border-white\" />\n                <div className=\"ml-6 text-left\">\n                  <h2 className=\"text-3xl font-bold\">Explorador Alpha</h2>\n                  <p className=\"text-xl\">Rango: Capitán Estelar</p>\n                  <div className=\"mt-2 bg-white bg-opacity-20 rounded-full h-4 w-48\">\n                    <div className=\"bg-blue-500 h-4 rounded-full\" style={{ width: '75%' }}></div>\n                  </div>\n                  <p className=\"text-sm mt-1\">Nivel 25 - 18750 / 25000 XP</p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">152</p>\n                  <p className=\"text-lg\">Misiones Completadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">7</p>\n                  <p className=\"text-lg\">Sistemas Descubiertos</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">3</p>\n                  <p className=\"text-lg\">Alianzas Formadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">12,345</p>\n                  <p className=\"text-lg\">Años Luz Viajados</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'logros' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={achievement.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`p-4 rounded-lg flex items-center ${\n                    achievement.obtained ? 'bg-yellow-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                  }`}\n                >\n                  <achievement.icon className={`w-10 h-10 mr-4 ${achievement.obtained ? 'text-yellow-400' : 'text-gray-400'}`} />\n                  <div>\n                    <h3 className=\"text-xl font-bold text-white\">{achievement.name}</h3>\n                    <p className=\"text-gray-300\">{achievement.description}</p>\n                  </div>\n                  {achievement.obtained && (\n                    <Star className=\"w-6 h-6 text-yellow-400 ml-auto\" />\n                  )}\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'habilidades' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {skills.map((skill, index) => (\n                <motion.div\n                  key={skill.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className=\"bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  <div className=\"flex items-center mb-2\">\n                    <skill.icon className={`w-8 h-8 ${skill.color} mr-2`} />\n                    <h3 className=\"text-xl font-bold text-white\">{skill.name}</h3>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-1 bg-gray-700 rounded-full h-2.5 mr-2\">\n                      <div className={`${skill.color} h-2.5 rounded-full`} style={{ width: `${(skill.level / 10) * 100}%` }}></div>\n                    </div>\n                    <span className=\"text-white font-bold\">{skill.level}/10</span>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'desafíos' && (\n            <div className=\"space-y-4\">\n              {dailyChallenges.map((challenge, index) => (\n                <motion.div\n                  key={challenge.name}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`p-4 rounded-lg flex items-center ${\n                    challenge.completed ? 'bg-green-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                  }`}\n                >\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-bold text-white\">{challenge.name}</h3>\n                    <p className=\"text-gray-300\">{challenge.description}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-yellow-300\">{challenge.reward}</p>\n                    {challenge.completed ? (\n                      <span className=\"text-green-400\">Completado</span>\n                    ) : (\n                      <button className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors\">\n                        Completar\n                      </button>\n                    )}\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'descubrimientos' && (\n            <div className=\"space-y-6\">\n              {discoveries.map((discovery, index) => (\n                <motion.div\n                  key={discovery.type}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.2 }}\n                  className=\"flex flex-col bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  {/* Header con Imagen y Tipo */}\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center\">\n                      <img src={discovery.image} alt={discovery.type} className=\"w-20 h-20 rounded-full mr-6\" />\n                      <div>\n                        <h3 className=\"text-2xl font-bold text-white\">{discovery.type}</h3>\n                        <p className=\"text-gray-300\">{discovery.unlocked} de {discovery.total} planetas desbloqueados</p>\n                        {/* Barra de Progreso */}\n                        <div className=\"w-full bg-gray-700 rounded-full h-3 mt-1\">\n                          <div \n                            className=\"bg-green-500 h-3 rounded-full\" \n                            style={{ width: `${(discovery.unlocked / discovery.total) * 100}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Botón para Expandir/Colapsar */}\n                    <button\n                      onClick={() => toggleExpansion(discovery.type)}\n                      className=\"text-white text-xl font-semibold px-4 py-2 rounded-full bg-blue-500 hover:bg-blue-600 transition-colors\"\n                    >\n                      {expandedDiscoveries[discovery.type] ? 'Ocultar' : 'Mostrar'}\n                    </button>\n                  </div>\n\n                  {/* Lista de Planetas (Expandible) */}\n                  <AnimatePresence>\n                    {expandedDiscoveries[discovery.type] && (\n                      <motion.div\n                        initial={{ height: 0, opacity: 0 }}\n                        animate={{ height: 'auto', opacity: 1 }}\n                        exit={{ height: 0, opacity: 0 }}\n                        transition={{ duration: 0.3 }}\n                        className=\"mt-4 space-y-4 overflow-hidden\"\n                      >\n                        {discovery.planets.map((planet, pIndex) => (\n                          <motion.div\n                            key={planet.name}\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ duration: 0.3, delay: pIndex * 0.05 }}\n                            className=\"flex items-center justify-between bg-white bg-opacity-20 p-3 rounded-lg\"\n                          >\n                            <div className=\"flex items-center\">\n                              {planet.unlocked ? (\n                                <img src={planetImages[planet.name] || 'https://via.placeholder.com/80?text=Planeta'} alt={planet.name} className=\"w-12 h-12 rounded-full mr-4\" />\n                              ) : (\n                                <div className=\"w-12 h-12 rounded-full bg-gray-700 flex items-center justify-center mr-4\">\n                                  <Lock className=\"w-6 h-6 text-gray-300\" />\n                                </div>\n                              )}\n                              <div>\n                                <h4 className=\"text-xl font-semibold text-white\">{planet.unlocked ? planet.name : '???'}</h4>\n                                {planet.unlocked && <p className=\"text-gray-300\">{planet.info}</p>}\n                              </div>\n                            </div>\n                            {planet.unlocked ? (\n                              <button className=\"px-4 py-2 bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors\">\n                                Aprender Más\n                              </button>\n                            ) : (\n                              <div className=\"flex items-center\">\n                                <Lock className=\"w-6 h-6 text-gray-300\" />\n                              </div>\n                            )}\n                          </motion.div>\n                        ))}\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n        </motion.div>\n      </div>\n\n      {/* Level Up Modal */}\n      <AnimatePresence>\n        {showLevelUpModal && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.8 }}\n            className=\"fixed inset-0 flex items-center justify-center z-50\"\n          >\n            <div className=\"bg-black bg-opacity-80 p-8 rounded-lg border-2 border-yellow-400 text-center\">\n              <h2 className=\"text-4xl font-bold text-yellow-400 mb-4\">¡Nivel Alcanzado!</h2>\n              <p className=\"text-2xl text-white mb-6\">Has alcanzado el nivel 26</p>\n              <p className=\"text-xl text-blue-300 mb-4\">Desbloqueas: Mejora de Motor Estelar</p>\n              <button\n                onClick={() => setShowLevelUpModal(false)}\n                className=\"px-6 py-3 bg-yellow-400 text-black rounded-full text-xl font-bold hover:bg-yellow-300 transition-colors\"\n              >\n                ¡Genial!\n              </button>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Additional Styles for Glowing Effects and Animations */}\n      <style jsx>{`\n        @keyframes bounce-slow {\n          0%, 100% {\n            transform: translateY(0);\n          }\n          50% {\n            transform: translateY(-15px);\n          }\n        }\n        .animate-bounce-slow {\n          animation: bounce-slow 4s infinite;\n        }\n      `}</style>\n    </div>\n  )\n}\n```\n\n### **Explicación Detallada**\n\n1. **Estructura de Datos para Descubrimientos**:\n   - **Planet Images**: Hemos definido un objeto `planetImages` que contiene las URLs de las imágenes para cada planeta individual. Actualmente, utilizamos imágenes de **placeholder**. Debes reemplazarlas con las imágenes reales de tus planetas.\n   ```javascript\n   const planetImages = {\n     'Planeta A': 'https://via.placeholder.com/80?text=Planeta+A',\n     'Planeta B': 'https://via.placeholder.com/80?text=Planeta+B',\n     // Añade más imágenes según sea necesario\n   }\n   ```\n   \n   - **Descubrimientos**: Cada objeto en el arreglo `discoveries` ahora incluye una propiedad `planets`, que es un arreglo de planetas asociados al tipo de exoplaneta. Cada planeta tiene propiedades como `name`, `info` y `unlocked` para indicar si ha sido descubierto.\n   ```javascript\n   const discoveries = [\n     { \n       type: \"Terrestres\", \n       image: exoplanetImages.Terrestres, \n       total: 10, \n       unlocked: 7,\n       planets: [\n         { name: \"Planeta A\", info: \"Un planeta rocoso similar a la Tierra.\", unlocked: true },\n         // Más planetas...\n       ]\n     },\n     // Más tipos...\n   ]\n   ```\n\n2. **Estado de Expansión**:\n   - Utilizamos el estado `expandedDiscoveries` para llevar un control de qué tipos de exoplanetas están actualmente expandidos. Este estado es un objeto que mapea cada tipo de exoplaneta a un valor booleano.\n   ```javascript\n   const [expandedDiscoveries, setExpandedDiscoveries] = useState({})\n   ```\n   \n   - **Función `toggleExpansion`**: Esta función alterna el estado de expansión para un tipo de exoplaneta especificado.\n   ```javascript\n   const toggleExpansion = (type) => {\n     setExpandedDiscoveries(prevState => ({\n       ...prevState,\n       [type]: !prevState[type]\n     }))\n   }\n   ```\n\n3. **Interfaz de Usuario para Descubrimientos**:\n   - Dentro de la pestaña **\"Descubrimientos\"**, iteramos sobre el arreglo `discoveries` para renderizar cada tipo de exoplaneta.\n   - **Header de Cada Tipo**:\n     - Muestra la imagen del tipo de exoplaneta, su nombre, la cantidad de planetas desbloqueados respecto al total y una barra de progreso que indica visualmente el avance.\n     - Incluye un botón que permite al usuario expandir o colapsar la lista de planetas individuales.\n   - **Lista de Planetas (Expansible)**:\n     - Utilizamos `AnimatePresence` y `motion.div` de Framer Motion para animar la aparición y desaparición de la lista de planetas.\n     - Cada planeta se muestra en una entrada con:\n       - **Planetas Desbloqueados**:\n         - Imagen del planeta, nombre, descripción y un botón \"Aprender Más\".\n       - **Planetas Bloqueados**:\n         - Un ícono de candado (`Lock` de `lucide-react`), nombre reemplazado por \"???\", y sin botón \"Aprender Más\".\n   \n   ```javascript\n   {activeTab === 'descubrimientos' && (\n     <div className=\"space-y-6\">\n       {discoveries.map((discovery, index) => (\n         <motion.div\n           key={discovery.type}\n           initial={{ opacity: 0, y: 20 }}\n           animate={{ opacity: 1, y: 0 }}\n           transition={{ duration: 0.5, delay: index * 0.2 }}\n           className=\"flex flex-col bg-white bg-opacity-10 p-4 rounded-lg\"\n         >\n           {/* Header con Imagen y Tipo */}\n           <div className=\"flex items-center justify-between\">\n             <div className=\"flex items-center\">\n               <img src={discovery.image} alt={discovery.type} className=\"w-20 h-20 rounded-full mr-6\" />\n               <div>\n                 <h3 className=\"text-2xl font-bold text-white\">{discovery.type}</h3>\n                 <p className=\"text-gray-300\">{discovery.unlocked} de {discovery.total} planetas desbloqueados</p>\n                 {/* Barra de Progreso */}\n                 <div className=\"w-full bg-gray-700 rounded-full h-3 mt-1\">\n                   <div \n                     className=\"bg-green-500 h-3 rounded-full\" \n                     style={{ width: `${(discovery.unlocked / discovery.total) * 100}%` }}\n                   ></div>\n                 </div>\n               </div>\n             </div>\n             {/* Botón para Expandir/Colapsar */}\n             <button\n               onClick={() => toggleExpansion(discovery.type)}\n               className=\"text-white text-xl font-semibold px-4 py-2 rounded-full bg-blue-500 hover:bg-blue-600 transition-colors\"\n             >\n               {expandedDiscoveries[discovery.type] ? 'Ocultar' : 'Mostrar'}\n             </button>\n           </div>\n\n           {/* Lista de Planetas (Expandible) */}\n           <AnimatePresence>\n             {expandedDiscoveries[discovery.type] && (\n               <motion.div\n                 initial={{ height: 0, opacity: 0 }}\n                 animate={{ height: 'auto', opacity: 1 }}\n                 exit={{ height: 0, opacity: 0 }}\n                 transition={{ duration: 0.3 }}\n                 className=\"mt-4 space-y-4 overflow-hidden\"\n               >\n                 {discovery.planets.map((planet, pIndex) => (\n                   <motion.div\n                     key={planet.name}\n                     initial={{ opacity: 0, y: 10 }}\n                     animate={{ opacity: 1, y: 0 }}\n                     transition={{ duration: 0.3, delay: pIndex * 0.05 }}\n                     className=\"flex items-center justify-between bg-white bg-opacity-20 p-3 rounded-lg\"\n                   >\n                     <div className=\"flex items-center\">\n                       {planet.unlocked ? (\n                         <img src={planetImages[planet.name] || 'https://via.placeholder.com/80?text=Planeta'} alt={planet.name} className=\"w-12 h-12 rounded-full mr-4\" />\n                       ) : (\n                         <div className=\"w-12 h-12 rounded-full bg-gray-700 flex items-center justify-center mr-4\">\n                           <Lock className=\"w-6 h-6 text-gray-300\" />\n                         </div>\n                       )}\n                       <div>\n                         <h4 className=\"text-xl font-semibold text-white\">{planet.unlocked ? planet.name : '???'}</h4>\n                         {planet.unlocked && <p className=\"text-gray-300\">{planet.info}</p>}\n                       </div>\n                     </div>\n                     {planet.unlocked ? (\n                       <button className=\"px-4 py-2 bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors\">\n                         Aprender Más\n                       </button>\n                     ) : (\n                       <div className=\"flex items-center\">\n                         <Lock className=\"w-6 h-6 text-gray-300\" />\n                       </div>\n                     )}\n                   </motion.div>\n                 ))}\n               </motion.div>\n             )}\n           </AnimatePresence>\n         </motion.div>\n       ))}\n     </div>\n   )}\n   ```\n\n4. **Cambios en la Pestaña de Navegación**:\n   - Hemos añadido **\"Descubrimientos\"** a la lista de pestañas de navegación.\n   ```javascript\n   {['info', 'logros', 'habilidades', 'desafíos', 'descubrimientos'].map((tab) => (\n     <button\n       key={tab}\n       onClick={() => setActiveTab(tab)}\n       className={`text-white text-lg font-semibold px-4 py-2 rounded-full transition-all duration-300 ${\n         activeTab === tab ? 'bg-white bg-opacity-20' : 'hover:bg-white hover:bg-opacity-10'\n       }`}\n     >\n       {tab.charAt(0).toUpperCase() + tab.slice(1)}\n     </button>\n   ))}\n   ```\n\n5. **Estilos y Responsividad**:\n   - Utilizamos clases de Tailwind CSS para asegurar que la interfaz sea responsiva y visualmente atractiva en diferentes tamaños de pantalla.\n   - Las animaciones de Framer Motion proporcionan transiciones suaves al expandir o colapsar las subsecciones de descubrimientos.\n\n### **Visualización de la Nueva Sección \"Descubrimientos\"**\n\nLa nueva sección **\"Descubrimientos\"** se estructurará de la siguiente manera:\n\n- **Encabezado del Tipo de Exoplaneta**:\n  - Imagen del tipo.\n  - Nombre del tipo.\n  - Barra de progreso que indica cuántos planetas se han desbloqueado.\n  - Botón para expandir o colapsar la lista de planetas.\n\n- **Lista de Planetas (Expansible)**:\n  - **Planetas Desbloqueados**:\n    - Imagen del planeta.\n    - Nombre del planeta.\n    - Descripción breve.\n    - Botón \"Aprender Más\" para obtener más información.\n  - **Planetas Bloqueados**:\n    - Ícono de candado o símbolos indicativos.\n    - Nombre del planeta reemplazado por \"???\".\n    - Sin botón \"Aprender Más\".\n\n![Estructura de Descubrimientos](https://via.placeholder.com/800x600?text=Descubrimientos+Estructura)\n\n*Nota: La imagen anterior es una representación visual simplificada. Asegúrate de reemplazar las URLs de las imágenes con las imágenes reales de tus exoplanetas.*\n\n### **Consideraciones Adicionales**\n\n1. **Mejora de las Imágenes**:\n   - Reemplaza las URLs de las imágenes de placeholder (`https://via.placeholder.com/...`) con las imágenes reales de los planetas para una mejor experiencia visual.\n\n2. **Funcionalidad del Botón \"Aprender Más\"**:\n   - Actualmente, los botones \"Aprender Más\" no tienen funcionalidad asociada. Puedes vincularlos a páginas de detalles de planetas o a modales que proporcionen información adicional.\n   - Ejemplo:\n     ```javascript\n     <button \n       onClick={() => handleLearnMore(planet.name)} \n       className=\"px-4 py-2 bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors\">\n       Aprender Más\n     </button>\n     ```\n     - Donde `handleLearnMore` es una función que maneja la navegación o la apertura de un modal con más información.\n\n3. **Accesibilidad**:\n   - Asegúrate de que todas las imágenes tengan atributos `alt` descriptivos para mejorar la accesibilidad.\n   - Los botones deben ser fácilmente accesibles y visibles, con suficiente contraste de colores.\n\n4. **Optimización de Rendimiento**:\n   - Si tienes una gran cantidad de planetas, considera implementar mecanismos de carga perezosa (`lazy loading`) para mejorar el rendimiento.\n\n5. **Personalización y Extensibilidad**:\n   - Puedes añadir más propiedades a los planetas, como descubrimientos históricos, coordenadas en la galaxia, o links a investigaciones científicas.\n   - Considera integrar filtros o búsquedas dentro de las listas de planetas para una mejor navegación.\n\n### **Conclusión**\n\nCon estas modificaciones, tu componente de perfil ahora incluye una sección **\"Descubrimientos\"** interactiva y detallada, que permite a los usuarios explorar diferentes tipos de exoplanetas, ver su progreso en el descubrimiento de cada tipo y acceder a información adicional sobre cada planeta desbloqueado. La integración de Tailwind CSS y Framer Motion asegura una experiencia de usuario fluida y visualmente coherente con el resto de la interfaz.\n\n¡Espero que estas mejoras cumplan con tus expectativas y enriquezcan la experiencia de tus usuarios en tu aplicación de exploración espacial!"
    },
    {
        "role": "user",
        "content": "great, but it would be better if you show them in a grid, instead of a list, and show the information when hovering"
    },
    {
        "role": "assistant",
        "content": "¡Me alegra saber que las modificaciones anteriores fueron útiles! Ahora, implementaremos la estructura solicitada para la sección **\"Descubrimientos\"**, organizando los planetas en una **cuadrícula (grid)** y mostrando la información adicional al **pasar el cursor (hover)** sobre cada planeta. Esto proporcionará una experiencia más interactiva y visualmente atractiva para el usuario.\n\n### **Resumen de las Modificaciones**\n\n1. **Organización en Grid**:\n   - Utilizaremos las clases de Tailwind CSS para crear una cuadrícula responsiva que albergue los planetas dentro de cada tipo de exoplaneta.\n   \n2. **Información en Hover**:\n   - Implementaremos un overlay que aparece al pasar el cursor sobre cada planeta, mostrando información detallada para los planetas desbloqueados y un indicador para los bloqueados.\n   - Utilizaremos `framer-motion` para animaciones suaves de aparición y desaparición del overlay.\n\n3. **Indicadores de Estado**:\n   - Para los planetas desbloqueados, mostraremos la imagen, el nombre y la información en el overlay.\n   - Para los planetas bloqueados, mostraremos un ícono de candado (`Lock` de `lucide-react`) o un símbolo de interrogación, dependiendo de tu preferencia.\n\n### **Implementación Detallada**\n\nA continuación, se presenta el código actualizado del componente `Profile` con las nuevas funcionalidades integradas:\n\n```javascript\nimport { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Trophy, Star, Zap, Rocket, Book, Globe, Atom, Brain, Heart, Lock } from 'lucide-react'\nimport frofilepic from '../img/pfp.png'\n\n// Definir URLs de imágenes para cada tipo de exoplaneta\nconst exoplanetImages = {\n  Terrestres: 'https://via.placeholder.com/100?text=Terrestres',\n  'Super-Terrestres': 'https://via.placeholder.com/100?text=Super-Terrestres',\n  Neptunianos: 'https://via.placeholder.com/100?text=Neptunianos',\n  'Gigantes Gaseosos': 'https://via.placeholder.com/100?text=Gigantes+Gaseosos',\n}\n\n// Definir imágenes para planetas individuales (Placeholder)\nconst planetImages = {\n  'Planeta A': 'https://via.placeholder.com/80?text=Planeta+A',\n  'Planeta B': 'https://via.placeholder.com/80?text=Planeta+B',\n  'Planeta C': 'https://via.placeholder.com/80?text=Planeta+C',\n  'Planeta D': 'https://via.placeholder.com/80?text=Planeta+D',\n  'Planeta E': 'https://via.placeholder.com/80?text=Planeta+E',\n  'Planeta F': 'https://via.placeholder.com/80?text=Planeta+F',\n  'Planeta G': 'https://via.placeholder.com/80?text=Planeta+G',\n  'Planeta H': 'https://via.placeholder.com/80?text=Planeta+H',\n  'Planeta I': 'https://via.placeholder.com/80?text=Planeta+I',\n  'Planeta J': 'https://via.placeholder.com/80?text=Planeta+J',\n  'Planeta K': 'https://via.placeholder.com/80?text=Planeta+K',\n  'Planeta L': 'https://via.placeholder.com/80?text=Planeta+L',\n  'Planeta M': 'https://via.placeholder.com/80?text=Planeta+M',\n  'Planeta N': 'https://via.placeholder.com/80?text=Planeta+N',\n  'Planeta O': 'https://via.placeholder.com/80?text=Planeta+O',\n  'Planeta P': 'https://via.placeholder.com/80?text=Planeta+P',\n  'Planeta Q': 'https://via.placeholder.com/80?text=Planeta+Q',\n  'Planeta R': 'https://via.placeholder.com/80?text=Planeta+R',\n  'Planeta S': 'https://via.placeholder.com/80?text=Planeta+S',\n  'Planeta T': 'https://via.placeholder.com/80?text=Planeta+T',\n  'Planeta U': 'https://via.placeholder.com/80?text=Planeta+U',\n  'Planeta V': 'https://via.placeholder.com/80?text=Planeta+V',\n  'Planeta W': 'https://via.placeholder.com/80?text=Planeta+W',\n  'Planeta X': 'https://via.placeholder.com/80?text=Planeta+X',\n  'Planeta Y': 'https://via.placeholder.com/80?text=Planeta+Y',\n  'Planeta Z': 'https://via.placeholder.com/80?text=Planeta+Z',\n  'Planeta AA': 'https://via.placeholder.com/80?text=Planeta+AA',\n  'Planeta AB': 'https://via.placeholder.com/80?text=Planeta+AB',\n  'Planeta AC': 'https://via.placeholder.com/80?text=Planeta+AC',\n  'Planeta AD': 'https://via.placeholder.com/80?text=Planeta+AD',\n  'Planeta AE': 'https://via.placeholder.com/80?text=Planeta+AE',\n  'Planeta AF': 'https://via.placeholder.com/80?text=Planeta+AF',\n  'Planeta AG': 'https://via.placeholder.com/80?text=Planeta+AG',\n  'Planeta AH': 'https://via.placeholder.com/80?text=Planeta+AH',\n  'Planeta AI': 'https://via.placeholder.com/80?text=Planeta+AI',\n  'Planeta AJ': 'https://via.placeholder.com/80?text=Planeta+AJ',\n  'Planeta AK': 'https://via.placeholder.com/80?text=Planeta+AK',\n  'Planeta AL': 'https://via.placeholder.com/80?text=Planeta+AL',\n  'Planeta AM': 'https://via.placeholder.com/80?text=Planeta+AM',\n  'Planeta AN': 'https://via.placeholder.com/80?text=Planeta+AN',\n  'Planeta AO': 'https://via.placeholder.com/80?text=Planeta+AO',\n  'Planeta AP': 'https://via.placeholder.com/80?text=Planeta+AP',\n  'Planeta AQ': 'https://via.placeholder.com/80?text=Planeta+AQ',\n  'Planeta AR': 'https://via.placeholder.com/80?text=Planeta+AR',\n  'Planeta AS': 'https://via.placeholder.com/80?text=Planeta+AS',\n}\n\nexport default function Profile() {\n  const [stars, setStars] = useState([])\n  const [activeTab, setActiveTab] = useState('info')\n  const [showLevelUpModal, setShowLevelUpModal] = useState(false)\n  const [expandedDiscoveries, setExpandedDiscoveries] = useState({}) // Mapeo de tipos a estados de expansión\n\n  useEffect(() => {\n    const generateStars = () => {\n      return Array.from({ length: 300 }, () => ({\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 3 + 1,\n        opacity: Math.random() * 0.7 + 0.3,\n        twinkleSpeed: Math.random() * 2 + 1,\n      }))\n    }\n    setStars(generateStars())\n  }, [])\n\n  const achievements = [\n    { name: \"Primer Contacto\", description: \"Descubre una nueva forma de vida\", icon: Star, obtained: true },\n    { name: \"Navegante Estelar\", description: \"Visita 50 sistemas solares\", icon: Rocket, obtained: false },\n    { name: \"Sabio del Cosmos\", description: \"Alcanza el nivel 50 en conocimientos astronómicos\", icon: Book, obtained: false },\n    { name: \"Héroe Intergaláctico\", description: \"Salva una civilización de la extinción\", icon: Trophy, obtained: true },\n    { name: \"Pionero del Hiperespacio\", description: \"Realiza 100 saltos hiperespaciales\", icon: Zap, obtained: false }\n  ]\n\n  const skills = [\n    { name: \"Pilotaje\", level: 7, icon: Rocket, color: \"text-blue-400\" },\n    { name: \"Diplomacia\", level: 5, icon: Heart, color: \"text-pink-400\" },\n    { name: \"Ciencia\", level: 8, icon: Atom, color: \"text-green-400\" },\n    { name: \"Exploración\", level: 6, icon: Globe, color: \"text-yellow-400\" },\n    { name: \"Estrategia\", level: 4, icon: Brain, color: \"text-purple-400\" }\n  ]\n\n  const dailyChallenges = [\n    { name: \"Exploración Rápida\", description: \"Visita 3 nuevos planetas hoy\", reward: \"50 XP\", completed: false },\n    { name: \"Diplomacia Diaria\", description: \"Interactúa con 2 especies alienígenas\", reward: \"30 XP\", completed: true },\n    { name: \"Estudio Estelar\", description: \"Analiza 5 estrellas diferentes\", reward: \"40 XP\", completed: false }\n  ]\n\n  // Datos para Descubrimientos incluyendo planetas\n  const discoveries = [\n    { \n      type: \"Terrestres\", \n      image: exoplanetImages.Terrestres, \n      total: 10, \n      unlocked: 7,\n      planets: [\n        { name: \"Planeta A\", info: \"Un planeta rocoso similar a la Tierra.\", unlocked: true },\n        { name: \"Planeta B\", info: \"Con atmósfera densa y múltiples océanos.\", unlocked: true },\n        { name: \"Planeta C\", info: \"Ubicado en la zona habitable de su estrella.\", unlocked: true },\n        { name: \"Planeta D\", info: \"Posee una luna gigante.\", unlocked: true },\n        { name: \"Planeta E\", info: \"Tiene signos de actividad geológica.\", unlocked: true },\n        { name: \"Planeta F\", info: \"Presenta variaciones climáticas extremas.\", unlocked: true },\n        { name: \"Planeta G\", info: \"Cuenta con sistemas de vida alienígena.\", unlocked: true },\n        { name: \"Planeta H\", info: \"Área de biodiversidad excepcional.\", unlocked: false },\n        { name: \"Planeta I\", info: \"Rodeado por un anillo luminoso.\", unlocked: false },\n        { name: \"Planeta J\", info: \"Centro de investigaciones científicas.\", unlocked: false },\n      ]\n    },\n    { \n      type: \"Super-Terrestres\", \n      image: exoplanetImages['Super-Terrestres'], \n      total: 8, \n      unlocked: 5,\n      planets: [\n        { name: \"Planeta K\", info: \"Tamaño mayor que la Tierra pero con condiciones habitables.\", unlocked: true },\n        { name: \"Planeta L\", info: \"Posee múltiples continentes flotantes.\", unlocked: true },\n        { name: \"Planeta M\", info: \"Con aire respirable pero con temperaturas elevadas.\", unlocked: true },\n        { name: \"Planeta N\", info: \"Tierra doble en un sistema binario.\", unlocked: true },\n        { name: \"Planeta O\", info: \"Con actividad volcánica intensa.\", unlocked: true },\n        { name: \"Planeta P\", info: \"Zona de migración de especies avanzadas.\", unlocked: false },\n        { name: \"Planeta Q\", info: \"Techo de cristal natural en su atmósfera.\", unlocked: false },\n        { name: \"Planeta R\", info: \"Recursos minerales invaluables.\", unlocked: false },\n      ]\n    },\n    { \n      type: \"Neptunianos\", \n      image: exoplanetImages.Neptunianos, \n      total: 12, \n      unlocked: 9,\n      planets: [\n        { name: \"Planeta S\", info: \"Composición principalmente de hielo y gas.\", unlocked: true },\n        { name: \"Planeta T\", info: \"Tierra gaseosa con tormentas electrostáticas.\", unlocked: true },\n        { name: \"Planeta U\", info: \"Posee un sistema de anillos espectacular.\", unlocked: true },\n        { name: \"Planeta V\", info: \"Con océanos de amoníaco líquido.\", unlocked: true },\n        { name: \"Planeta W\", info: \"Ubicado en la periferia de su galaxia.\", unlocked: true },\n        { name: \"Planeta X\", info: \"Con múltiples lunas heladas.\", unlocked: true },\n        { name: \"Planeta Y\", info: \"Sistema meteorológico único y complejo.\", unlocked: true },\n        { name: \"Planeta Z\", info: \"Reserva de energías renovables extraterrestres.\", unlocked: true },\n        { name: \"Planeta AA\", info: \"Cúpulas geodésicas naturales en la superficie.\", unlocked: false },\n        { name: \"Planeta AB\", info: \"Con hendiduras minerales profundas.\", unlocked: false },\n        { name: \"Planeta AC\", info: \"Zona de investigación científica avanzada.\", unlocked: false },\n        { name: \"Planeta AD\", info: \"Refugio de especies acuáticas inteligentes.\", unlocked: false },\n      ]\n    },\n    { \n      type: \"Gigantes Gaseosos\", \n      image: exoplanetImages['Gigantes Gaseosos'], \n      total: 15, \n      unlocked: 10,\n      planets: [\n        { name: \"Planeta AE\", info: \"Enorme planeta con capas de gas iridiscentes.\", unlocked: true },\n        { name: \"Planeta AF\", info: \"Con sistemas de coloraciones atmosféricas cambiantes.\", unlocked: true },\n        { name: \"Planeta AG\", info: \"Posee una estación espacial natural en sus nubes.\", unlocked: true },\n        { name: \"Planeta AH\", info: \"Con internalización de torres de energía.\", unlocked: true },\n        { name: \"Planeta AI\", info: \"Presencia de gigantescas tormentas eléctricas.\", unlocked: true },\n        { name: \"Planeta AJ\", info: \"Órbita cercana a una estrella de neutrones.\", unlocked: true },\n        { name: \"Planeta AK\", info: \"Con múltiples anillos compuestos por partículas de hielo.\", unlocked: true },\n        { name: \"Planeta AL\", info: \"Centro de nexos energéticos interplanetarios.\", unlocked: true },\n        { name: \"Planeta AM\", info: \"Habitat de criaturas aéreas prehistóricas.\", unlocked: true },\n        { name: \"Planeta AN\", info: \"Reservorio de materiales de construcción avanzados.\", unlocked: true },\n        { name: \"Planeta AO\", info: \"Conducción de estudios atmosféricos profundos.\", unlocked: false },\n        { name: \"Planeta AP\", info: \"Base de investigaciones arqueológicas extraterrestres.\", unlocked: false },\n        { name: \"Planeta AQ\", info: \"Infraestructura energética autosostenible.\", unlocked: false },\n        { name: \"Planeta AR\", info: \"Área de terapias climáticas intergalácticas.\", unlocked: false },\n        { name: \"Planeta AS\", info: \"Núcleo de investigación de tecnologías cuánticas.\", unlocked: false },\n      ]\n    },\n  ]\n\n  // Función para alternar la expansión de una categoría de descubrimientos\n  const toggleExpansion = (type) => {\n    setExpandedDiscoveries(prevState => ({\n      ...prevState,\n      [type]: !prevState[type]\n    }))\n  }\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden flex items-center justify-center bg-[url('https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80')] bg-cover bg-center\">\n      {/* Starfield Background with Twinkling Effect */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black\"></div>\n      {stars.map((star, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute bg-white rounded-full\"\n          style={{\n            left: `${star.x}%`,\n            top: `${star.y}%`,\n            width: `${star.size}px`,\n            height: `${star.size}px`,\n            opacity: star.opacity,\n          }}\n          animate={{ opacity: [0.3, star.opacity, 0.3] }}\n          transition={{\n            duration: star.twinkleSpeed,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      ))}\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n\n      {/* Content */}\n      <div className=\"z-10 text-center space-y-8 px-4 w-full max-w-6xl\">\n        <motion.h1\n          initial={{ y: -50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, ease: 'backOut' }}\n          className=\"text-5xl md:text-6xl font-extrabold text-white mb-8\"\n          style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n        >\n          Perfil del Explorador\n        </motion.h1>\n\n        <motion.div\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-black bg-opacity-50 p-8 rounded-lg border border-white border-opacity-20\"\n        >\n          <div className=\"flex justify-center space-x-4 mb-8\">\n            {['info', 'logros', 'habilidades', 'desafíos', 'descubrimientos'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`text-white text-lg font-semibold px-4 py-2 rounded-full transition-all duration-300 ${\n                  activeTab === tab ? 'bg-white bg-opacity-20' : 'hover:bg-white hover:bg-opacity-10'\n                }`}\n              >\n                {tab.charAt(0).toUpperCase() + tab.slice(1)}\n              </button>\n            ))}\n          </div>\n\n          {activeTab === 'info' && (\n            <div className=\"text-white\">\n              <div className=\"flex items-center justify-center mb-6\">\n                <img src={frofilepic} alt=\"Avatar\" className=\"w-24 h-24 rounded-full border-4 border-white\" />\n                <div className=\"ml-6 text-left\">\n                  <h2 className=\"text-3xl font-bold\">Explorador Alpha</h2>\n                  <p className=\"text-xl\">Rango: Capitán Estelar</p>\n                  <div className=\"mt-2 bg-white bg-opacity-20 rounded-full h-4 w-48\">\n                    <div className=\"bg-blue-500 h-4 rounded-full\" style={{ width: '75%' }}></div>\n                  </div>\n                  <p className=\"text-sm mt-1\">Nivel 25 - 18750 / 25000 XP</p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">152</p>\n                  <p className=\"text-lg\">Misiones Completadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">7</p>\n                  <p className=\"text-lg\">Sistemas Descubiertos</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">3</p>\n                  <p className=\"text-lg\">Alianzas Formadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">12,345</p>\n                  <p className=\"text-lg\">Años Luz Viajados</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'logros' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={achievement.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`p-4 rounded-lg flex items-center ${\n                    achievement.obtained ? 'bg-yellow-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                  }`}\n                >\n                  <achievement.icon className={`w-10 h-10 mr-4 ${achievement.obtained ? 'text-yellow-400' : 'text-gray-400'}`} />\n                  <div>\n                    <h3 className=\"text-xl font-bold text-white\">{achievement.name}</h3>\n                    <p className=\"text-gray-300\">{achievement.description}</p>\n                  </div>\n                  {achievement.obtained && (\n                    <Star className=\"w-6 h-6 text-yellow-400 ml-auto\" />\n                  )}\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'habilidades' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {skills.map((skill, index) => (\n                <motion.div\n                  key={skill.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className=\"bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  <div className=\"flex items-center mb-2\">\n                    <skill.icon className={`w-8 h-8 ${skill.color} mr-2`} />\n                    <h3 className=\"text-xl font-bold text-white\">{skill.name}</h3>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-1 bg-gray-700 rounded-full h-2.5 mr-2\">\n                      <div className={`${skill.color} h-2.5 rounded-full`} style={{ width: `${(skill.level / 10) * 100}%` }}></div>\n                    </div>\n                    <span className=\"text-white font-bold\">{skill.level}/10</span>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'desafíos' && (\n            <div className=\"space-y-4\">\n              {dailyChallenges.map((challenge, index) => (\n                <motion.div\n                  key={challenge.name}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`p-4 rounded-lg flex items-center ${\n                    challenge.completed ? 'bg-green-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                  }`}\n                >\n                  <div className=\"flex-1\">\n                    <h3 className=\"text-xl font-bold text-white\">{challenge.name}</h3>\n                    <p className=\"text-gray-300\">{challenge.description}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-yellow-300\">{challenge.reward}</p>\n                    {challenge.completed ? (\n                      <span className=\"text-green-400\">Completado</span>\n                    ) : (\n                      <button className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors\">\n                        Completar\n                      </button>\n                    )}\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'descubrimientos' && (\n            <div className=\"space-y-6\">\n              {discoveries.map((discovery, index) => (\n                <motion.div\n                  key={discovery.type}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.2 }}\n                  className=\"flex flex-col bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  {/* Header con Imagen y Tipo */}\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center\">\n                      <img src={discovery.image} alt={discovery.type} className=\"w-20 h-20 rounded-full mr-6\" />\n                      <div>\n                        <h3 className=\"text-2xl font-bold text-white\">{discovery.type}</h3>\n                        <p className=\"text-gray-300\">{discovery.unlocked} de {discovery.total} planetas desbloqueados</p>\n                        {/* Barra de Progreso */}\n                        <div className=\"w-full bg-gray-700 rounded-full h-3 mt-1\">\n                          <div \n                            className=\"bg-green-500 h-3 rounded-full\" \n                            style={{ width: `${(discovery.unlocked / discovery.total) * 100}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Botón para Expandir/Colapsar */}\n                    <button\n                      onClick={() => toggleExpansion(discovery.type)}\n                      className=\"text-white text-xl font-semibold px-4 py-2 rounded-full bg-blue-500 hover:bg-blue-600 transition-colors\"\n                    >\n                      {expandedDiscoveries[discovery.type] ? 'Ocultar' : 'Mostrar'}\n                    </button>\n                  </div>\n\n                  {/* Lista de Planetas (Expandible en Grid) */}\n                  <AnimatePresence>\n                    {expandedDiscoveries[discovery.type] && (\n                      <motion.div\n                        initial={{ height: 0, opacity: 0 }}\n                        animate={{ height: 'auto', opacity: 1 }}\n                        exit={{ height: 0, opacity: 0 }}\n                        transition={{ duration: 0.3 }}\n                        className=\"mt-4 grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\"\n                      >\n                        {discovery.planets.map((planet, pIndex) => (\n                          <motion.div\n                            key={planet.name}\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ duration: 0.3, delay: pIndex * 0.05 }}\n                            className=\"relative bg-white bg-opacity-20 rounded-lg overflow-hidden cursor-pointer\"\n                          >\n                            {/* Imagen o Indicador de Bloqueo */}\n                            {planet.unlocked ? (\n                              <img src={planetImages[planet.name] || 'https://via.placeholder.com/80?text=Planeta'} alt={planet.name} className=\"w-full h-32 object-cover\" />\n                            ) : (\n                              <div className=\"w-full h-32 bg-gray-700 flex items-center justify-center\">\n                                <Lock className=\"w-8 h-8 text-gray-300\" />\n                              </div>\n                            )}\n\n                            {/* Overlay de Información en Hover */}\n                            {planet.unlocked && (\n                              <motion.div\n                                className=\"absolute inset-0 bg-black bg-opacity-70 flex flex-col items-center justify-center text-center p-2 opacity-0 hover:opacity-100 transition-opacity duration-300\"\n                                whileHover={{ opacity: 1 }}\n                                initial={{ opacity: 0 }}\n                                animate={{ opacity: 0 }}\n                              >\n                                <h4 className=\"text-lg font-bold text-white\">{planet.name}</h4>\n                                <p className=\"text-sm text-gray-300 mb-2\">{planet.info}</p>\n                                <button className=\"px-3 py-1 bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors\">\n                                  Aprender Más\n                                </button>\n                              </motion.div>\n                            )}\n\n                            {/* Indicador para Planetas Bloqueados */}\n                            {!planet.unlocked && (\n                              <motion.div\n                                className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\"\n                                whileHover={{ opacity: 0.8 }}\n                                initial={{ opacity: 0.5 }}\n                              >\n                                <p className=\"text-white text-lg\">???</p>\n                              </motion.div>\n                            )}\n                          </motion.div>\n                        ))}\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n        </motion.div>\n      </div>\n\n      {/* Level Up Modal */}\n      <AnimatePresence>\n        {showLevelUpModal && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.8 }}\n            className=\"fixed inset-0 flex items-center justify-center z-50\"\n          >\n            <div className=\"bg-black bg-opacity-80 p-8 rounded-lg border-2 border-yellow-400 text-center\">\n              <h2 className=\"text-4xl font-bold text-yellow-400 mb-4\">¡Nivel Alcanzado!</h2>\n              <p className=\"text-2xl text-white mb-6\">Has alcanzado el nivel 26</p>\n              <p className=\"text-xl text-blue-300 mb-4\">Desbloqueas: Mejora de Motor Estelar</p>\n              <button\n                onClick={() => setShowLevelUpModal(false)}\n                className=\"px-6 py-3 bg-yellow-400 text-black rounded-full text-xl font-bold hover:bg-yellow-300 transition-colors\"\n              >\n                ¡Genial!\n              </button>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Additional Styles for Glowing Effects and Animations */}\n      <style jsx>{`\n        @keyframes bounce-slow {\n          0%, 100% {\n            transform: translateY(0);\n          }\n          50% {\n            transform: translateY(-15px);\n          }\n        }\n        .animate-bounce-slow {\n          animation: bounce-slow 4s infinite;\n        }\n      `}</style>\n    </div>\n  )\n}\n```\n\n### **Explicación Detallada**\n\n1. **Estructura de Datos para Descubrimientos y Planetas**:\n   - **`discoveries`** ahora incluye una propiedad `planets` para cada tipo de exoplaneta, detallando cada planeta con `name`, `info` y `unlocked`.\n   - **`planetImages`** contiene las URLs de las imágenes para cada planeta individual. Asegúrate de reemplazar las URLs de placeholder con las imágenes reales de tus planetas.\n\n2. **Organización en Grid**:\n   - Para cada tipo de exoplaneta dentro de la pestaña **\"Descubrimientos\"**, los planetas se muestran en una cuadrícula responsiva utilizando las clases de Tailwind CSS como `grid`, `grid-cols-2`, `sm:grid-cols-3`, `md:grid-cols-4`, y `gap-4`.\n   - Esto garantiza que la disposición de las tarjetas de planetas se ajuste de manera elegante a diferentes tamaños de pantalla.\n\n3. **Información en Hover**:\n   - **Planetas Desbloqueados**:\n     - Al pasar el cursor sobre un planeta desbloqueado, un overlay semitransparente negro aparece (`bg-black bg-opacity-70`) mostrando el nombre del planeta, una breve descripción y un botón \"Aprender Más\".\n     - Utilizamos `framer-motion` para suavizar la transición de opacidad al pasar y salir del hover.\n   - **Planetas Bloqueados**:\n     - Los planetas bloqueados muestran un ícono de candado (`Lock` de `lucide-react`) o \"???\" sobre un fondo semitransparente al pasar el cursor.\n     - Estos planetas no muestran la información detallada ni botones adicionales.\n\n4. **Estilos y Animaciones**:\n   - **Tailwind CSS**: Utilizamos clases como `rounded-lg`, `rounded-full`, `bg-opacity-20`, `hover:bg-opacity-70`, `transition-opacity`, etc., para mantener la coherencia visual.\n   - **Framer Motion**: Aplicamos animaciones de aparición y desaparición (`opacity` y `y` transitions) para mejorar la interactividad y la fluidez de la interfaz.\n   \n5. **Responsividad**:\n   - La cuadrícula de planetas se adapta a diferentes tamaños de pantalla:\n     - `grid-cols-2` en pantallas pequeñas.\n     - `sm:grid-cols-3` en pantallas medianas.\n     - `md:grid-cols-4` en pantallas grandes.\n   - Las imágenes y el contenido dentro de cada tarjeta de planeta también se adaptan para mantener una presentación limpia y atractiva.\n\n6. **Funcionalidad de Botones**:\n   - **\"Aprender Más\"**: \n     - Este botón está disponible únicamente para los planetas desbloqueados.\n     - Actualmente, el botón no tiene una funcionalidad vinculada. Puedes implementarlo para que abra un modal con más información, redirija a una página detallada, o cualquier otra acción que desees.\n   - **Botón \"Mostrar/Ocultar\"**:\n     - Permite al usuario expandir o colapsar la lista de planetas dentro de cada tipo de exoplaneta.\n     - Utiliza el estado `expandedDiscoveries` para manejar qué secciones están abiertas.\n\n### **Captura Visual de la Sección \"Descubrimientos\"**\n\nA continuación, se muestra una representación visual simplificada de cómo aparecerá la sección:\n\n#### **Vista General de Descubrimientos**\n\n```\n+---------------------------------------------------------------+\n| [Imagen Terrestres]  Terrestres                               |\n| 7 de 10 planetas desbloqueados                                |\n| [=========             ]                                       |\n| [Botón Mostrar/Ocultar]                                       |\n+---------------------------------------------------------------+\n```\n\n#### **Planetas Desbloqueados (En Grid)**\n\n```\n+----------------+----------------+----------------+----------------+\n| [Planeta A]     [Planeta B]     [Planeta C]     [Planeta D]     |\n| \"Nombre\"        \"Nombre\"        \"Nombre\"        \"Nombre\"        |\n+----------------+----------------+----------------+----------------+\n| [Planeta E]     [Planeta F]     [Planeta G]     [Planeta H]     |\n| \"Nombre\"        \"Nombre\"        \"Nombre\"        ???            |\n+----------------+----------------+----------------+----------------+\n| ...            ...            ...            ...            |\n+----------------+----------------+----------------+----------------+\n```\n\n*Al pasar el cursor sobre cada [Planeta], aparece un overlay con su nombre, información y un botón \"Aprender Más\" (para planetas desbloqueados). Los planetas bloqueados muestran \"???\".*\n\n### **Consideraciones Adicionales**\n\n1. **Interactividad Avanzada**:\n   - **Acciones del Botón \"Aprender Más\"**:\n     - Puedes implementar funcionalidades adicionales, como modales informativos, enlaces a páginas detalladas o herramientas interactivas que expandan aún más la información del planeta.\n     - Ejemplo con Modal:\n\n       ```javascript\n       // Estado para manejar la información del planeta seleccionado\n       const [selectedPlanet, setSelectedPlanet] = useState(null)\n\n       // Función para manejar \"Aprender Más\"\n       const handleLearnMore = (planet) => {\n         setSelectedPlanet(planet)\n       }\n\n       // Modal para mostrar información detallada\n       <AnimatePresence>\n         {selectedPlanet && (\n           <motion.div\n             initial={{ opacity: 0 }}\n             animate={{ opacity: 1 }}\n             exit={{ opacity: 0 }}\n             className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-70\"\n           >\n             <motion.div\n               initial={{ scale: 0.8 }}\n               animate={{ scale: 1 }}\n               exit={{ scale: 0.8 }}\n               className=\"bg-white p-6 rounded-lg\"\n             >\n               <h2 className=\"text-2xl font-bold mb-4\">{selectedPlanet.name}</h2>\n               <p className=\"mb-4\">{selectedPlanet.info}</p>\n               <button\n                 onClick={() => setSelectedPlanet(null)}\n                 className=\"px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors\"\n               >\n                 Cerrar\n               </button>\n             </motion.div>\n           </motion.div>\n         )}\n       </AnimatePresence>\n       ```\n\n     - **Integración en el Código**:\n       - Añade el estado `selectedPlanet` y la función `handleLearnMore`.\n       - En cada botón \"Aprender Más\", llama a `handleLearnMore(planet)`.\n\n2. **Optimización de Imágenes**:\n   - Asegúrate de utilizar imágenes optimizadas para mejorar el rendimiento y la carga de la página.\n   - Considera usar formatos como **WebP** o **SVG** si son adecuadas para tus imágenes.\n\n3. **Accesibilidad**:\n   - Asegúrate de que todas las imágenes tengan atributos `alt` descriptivos.\n   - Implementa controles de teclado para navegar y activar los botones de manera accesible.\n   - Mantén un contraste adecuado entre el texto y el fondo para mejorar la legibilidad.\n\n4. **Responsividad**:\n   - Verifica que la cuadrícula de planetas se vea bien en todos los tamaños de pantalla.\n   - Ajusta las clases de Tailwind CSS según sea necesario para mantener una experiencia óptima en dispositivos móviles.\n\n5. **Estado y Rendimiento**:\n   - Si la lista de planetas es extensa, considera técnicas de **virtualización** para mejorar el rendimiento.\n   - Mantén el estado gestionado eficientemente para evitar renders innecesarios.\n\n### **Resultado Final**\n\nCon estas modificaciones, tu componente de perfil ahora incluye una sección **\"Descubrimientos\"** organizada en cuadrículas para cada tipo de exoplaneta. Al pasar el cursor sobre cada planeta, se muestra un overlay con información detallada y opciones adicionales para los planetas desbloqueados, mientras que los planetas bloqueados muestran indicadores claros de su estado.\n\n### **Ejemplo Visual de la Sección \"Descubrimientos\"**\n\n![Descubrimientos Grid Example](https://via.placeholder.com/800x600?text=Descubrimientos+Grid+Example)\n\n*Nota: Reemplaza las URLs de las imágenes de placeholder con las imágenes reales de tus planetas para una representación visual auténtica.*\n\n### **Conclusión**\n\nEstas actualizaciones mejorarán significativamente la interactividad y la presentación de la sección **\"Descubrimientos\"** en tu componente de perfil, proporcionando a los usuarios una manera visualmente atractiva y fácil de navegar para explorar los diferentes tipos de exoplanetas y su progreso en el descubrimiento de cada uno. La integración de Tailwind CSS y Framer Motion asegura una experiencia de usuario fluida y coherente con el resto de la interfaz.\n\n¡Espero que estas mejoras cumplan con tus expectativas y enriquezcan aún más la experiencia de tus usuarios en tu aplicación de exploración espacial!"
    },
    {
        "role": "user",
        "content": "Great, now in \"Desafíos\", do the next:\n\n\"add a little red tag notification in the title of Desafíos, meaning that there is one mission to collect, and inside the desafíos, allow to complete the challenges, with a really good animation that is satisfactory, and change it to the completed state"
    },
    {
        "role": "assistant",
        "content": "¡Me alegra saber que estás satisfecho con las mejoras anteriores! Ahora, procederemos a implementar las nuevas funcionalidades solicitadas para la sección **\"Desafíos\"**. A continuación, detallaremos los cambios necesarios y proporcionaremos el código completo actualizado del componente `Profile`.\n\n### **Resumen de las Nuevas Funcionalidades**\n\n1. **Agregar una Notificación de Etiqueta Roja en el Título de \"Desafíos\"**:\n   - Mostrar una etiqueta roja con el número de desafíos pendientes.\n   - Esta etiqueta aparecerá cuando haya al menos un desafío pendiente.\n\n2. **Permitir Completar Desafíos**:\n   - Al hacer clic en el botón \"Completar\", el desafío pasará a su estado completado.\n   - Se mostrará una animación satisfactoria al completar el desafío.\n   - El estado visual del desafío cambiará a \"Completado\".\n\n### **Implementación Detallada**\n\nA continuación, se presenta el código actualizado con las nuevas funcionalidades integradas:\n\n```javascript\nimport { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Trophy, Star, Zap, Rocket, Book, Globe, Atom, Brain, Heart, Lock, CheckCircle, XCircle } from 'lucide-react'\nimport frofilepic from '../img/pfp.png'\n\n// Definir URLs de imágenes para cada tipo de exoplaneta\nconst exoplanetImages = {\n  Terrestres: 'https://via.placeholder.com/100?text=Terrestres',\n  'Super-Terrestres': 'https://via.placeholder.com/100?text=Super-Terrestres',\n  Neptunianos: 'https://via.placeholder.com/100?text=Neptunianos',\n  'Gigantes Gaseosos': 'https://via.placeholder.com/100?text=Gigantes+Gaseosos',\n}\n\n// Definir imágenes para planetas individuales (Placeholder)\nconst planetImages = {\n  'Planeta A': 'https://via.placeholder.com/80?text=Planeta+A',\n  'Planeta B': 'https://via.placeholder.com/80?text=Planeta+B',\n  'Planeta C': 'https://via.placeholder.com/80?text=Planeta+C',\n  'Planeta D': 'https://via.placeholder.com/80?text=Planeta+D',\n  'Planeta E': 'https://via.placeholder.com/80?text=Planeta+E',\n  'Planeta F': 'https://via.placeholder.com/80?text=Planeta+F',\n  'Planeta G': 'https://via.placeholder.com/80?text=Planeta+G',\n  'Planeta H': 'https://via.placeholder.com/80?text=Planeta+H',\n  'Planeta I': 'https://via.placeholder.com/80?text=Planeta+I',\n  'Planeta J': 'https://via.placeholder.com/80?text=Planeta+J',\n  'Planeta K': 'https://via.placeholder.com/80?text=Planeta+K',\n  'Planeta L': 'https://via.placeholder.com/80?text=Planeta+L',\n  'Planeta M': 'https://via.placeholder.com/80?text=Planeta+M',\n  'Planeta N': 'https://via.placeholder.com/80?text=Planeta+N',\n  'Planeta O': 'https://via.placeholder.com/80?text=Planeta+O',\n  'Planeta P': 'https://via.placeholder.com/80?text=Planeta+P',\n  'Planeta Q': 'https://via.placeholder.com/80?text=Planeta+Q',\n  'Planeta R': 'https://via.placeholder.com/80?text=Planeta+R',\n  'Planeta S': 'https://via.placeholder.com/80?text=Planeta+S',\n  'Planeta T': 'https://via.placeholder.com/80?text=Planeta+T',\n  'Planeta U': 'https://via.placeholder.com/80?text=Planeta+U',\n  'Planeta V': 'https://via.placeholder.com/80?text=Planeta+V',\n  'Planeta W': 'https://via.placeholder.com/80?text=Planeta+W',\n  'Planeta X': 'https://via.placeholder.com/80?text=Planeta+X',\n  'Planeta Y': 'https://via.placeholder.com/80?text=Planeta+Y',\n  'Planeta Z': 'https://via.placeholder.com/80?text=Planeta+Z',\n  'Planeta AA': 'https://via.placeholder.com/80?text=Planeta+AA',\n  'Planeta AB': 'https://via.placeholder.com/80?text=Planeta+AB',\n  'Planeta AC': 'https://via.placeholder.com/80?text=Planeta+AC',\n  'Planeta AD': 'https://via.placeholder.com/80?text=Planeta+AD',\n  'Planeta AE': 'https://via.placeholder.com/80?text=Planeta+AE',\n  'Planeta AF': 'https://via.placeholder.com/80?text=Planeta+AF',\n  'Planeta AG': 'https://via.placeholder.com/80?text=Planeta+AG',\n  'Planeta AH': 'https://via.placeholder.com/80?text=Planeta+AH',\n  'Planeta AI': 'https://via.placeholder.com/80?text=Planeta+AI',\n  'Planeta AJ': 'https://via.placeholder.com/80?text=Planeta+AJ',\n  'Planeta AK': 'https://via.placeholder.com/80?text=Planeta+AK',\n  'Planeta AL': 'https://via.placeholder.com/80?text=Planeta+AL',\n  'Planeta AM': 'https://via.placeholder.com/80?text=Planeta+AM',\n  'Planeta AN': 'https://via.placeholder.com/80?text=Planeta+AN',\n  'Planeta AO': 'https://via.placeholder.com/80?text=Planeta+AO',\n  'Planeta AP': 'https://via.placeholder.com/80?text=Planeta+AP',\n  'Planeta AQ': 'https://via.placeholder.com/80?text=Planeta+AQ',\n  'Planeta AR': 'https://via.placeholder.com/80?text=Planeta+AR',\n  'Planeta AS': 'https://via.placeholder.com/80?text=Planeta+AS',\n}\n\nexport default function Profile() {\n  const [stars, setStars] = useState([])\n  const [activeTab, setActiveTab] = useState('info')\n  const [showLevelUpModal, setShowLevelUpModal] = useState(false)\n  const [expandedDiscoveries, setExpandedDiscoveries] = useState({}) // Mapeo de tipos a estados de expansión\n  const [dailyChallenges, setDailyChallenges] = useState([\n    { name: \"Exploración Rápida\", description: \"Visita 3 nuevos planetas hoy\", reward: \"50 XP\", completed: false },\n    { name: \"Diplomacia Diaria\", description: \"Interactúa con 2 especies alienígenas\", reward: \"30 XP\", completed: true },\n    { name: \"Estudio Estelar\", description: \"Analiza 5 estrellas diferentes\", reward: \"40 XP\", completed: false }\n  ])\n\n  useEffect(() => {\n    const generateStars = () => {\n      return Array.from({ length: 300 }, () => ({\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 3 + 1,\n        opacity: Math.random() * 0.7 + 0.3,\n        twinkleSpeed: Math.random() * 2 + 1,\n      }))\n    }\n    setStars(generateStars())\n  }, [])\n\n  const achievements = [\n    { name: \"Primer Contacto\", description: \"Descubre una nueva forma de vida\", icon: Star, obtained: true },\n    { name: \"Navegante Estelar\", description: \"Visita 50 sistemas solares\", icon: Rocket, obtained: false },\n    { name: \"Sabio del Cosmos\", description: \"Alcanza el nivel 50 en conocimientos astronómicos\", icon: Book, obtained: false },\n    { name: \"Héroe Intergaláctico\", description: \"Salva una civilización de la extinción\", icon: Trophy, obtained: true },\n    { name: \"Pionero del Hiperespacio\", description: \"Realiza 100 saltos hiperespaciales\", icon: Zap, obtained: false }\n  ]\n\n  const skills = [\n    { name: \"Pilotaje\", level: 7, icon: Rocket, color: \"text-blue-400\" },\n    { name: \"Diplomacia\", level: 5, icon: Heart, color: \"text-pink-400\" },\n    { name: \"Ciencia\", level: 8, icon: Atom, color: \"text-green-400\" },\n    { name: \"Exploración\", level: 6, icon: Globe, color: \"text-yellow-400\" },\n    { name: \"Estrategia\", level: 4, icon: Brain, color: \"text-purple-400\" }\n  ]\n\n  // Datos para Descubrimientos incluyendo planetas\n  const discoveries = [\n    { \n      type: \"Terrestres\", \n      image: exoplanetImages.Terrestres, \n      total: 10, \n      unlocked: 7,\n      planets: [\n        { name: \"Planeta A\", info: \"Un planeta rocoso similar a la Tierra.\", unlocked: true },\n        { name: \"Planeta B\", info: \"Con atmósfera densa y múltiples océanos.\", unlocked: true },\n        { name: \"Planeta C\", info: \"Ubicado en la zona habitable de su estrella.\", unlocked: true },\n        { name: \"Planeta D\", info: \"Posee una luna gigante.\", unlocked: true },\n        { name: \"Planeta E\", info: \"Tiene signos de actividad geológica.\", unlocked: true },\n        { name: \"Planeta F\", info: \"Presenta variaciones climáticas extremas.\", unlocked: true },\n        { name: \"Planeta G\", info: \"Cuenta con sistemas de vida alienígena.\", unlocked: true },\n        { name: \"Planeta H\", info: \"Área de biodiversidad excepcional.\", unlocked: false },\n        { name: \"Planeta I\", info: \"Rodeado por un anillo luminoso.\", unlocked: false },\n        { name: \"Planeta J\", info: \"Centro de investigaciones científicas.\", unlocked: false },\n      ]\n    },\n    { \n      type: \"Super-Terrestres\", \n      image: exoplanetImages['Super-Terrestres'], \n      total: 8, \n      unlocked: 5,\n      planets: [\n        { name: \"Planeta K\", info: \"Tamaño mayor que la Tierra pero con condiciones habitables.\", unlocked: true },\n        { name: \"Planeta L\", info: \"Posee múltiples continentes flotantes.\", unlocked: true },\n        { name: \"Planeta M\", info: \"Con aire respirable pero con temperaturas elevadas.\", unlocked: true },\n        { name: \"Planeta N\", info: \"Tierra doble en un sistema binario.\", unlocked: true },\n        { name: \"Planeta O\", info: \"Con actividad volcánica intensa.\", unlocked: true },\n        { name: \"Planeta P\", info: \"Zona de migración de especies avanzadas.\", unlocked: false },\n        { name: \"Planeta Q\", info: \"Techo de cristal natural en su atmósfera.\", unlocked: false },\n        { name: \"Planeta R\", info: \"Recursos minerales invaluables.\", unlocked: false },\n      ]\n    },\n    { \n      type: \"Neptunianos\", \n      image: exoplanetImages.Neptunianos, \n      total: 12, \n      unlocked: 9,\n      planets: [\n        { name: \"Planeta S\", info: \"Composición principalmente de hielo y gas.\", unlocked: true },\n        { name: \"Planeta T\", info: \"Tierra gaseosa con tormentas electrostáticas.\", unlocked: true },\n        { name: \"Planeta U\", info: \"Posee un sistema de anillos espectacular.\", unlocked: true },\n        { name: \"Planeta V\", info: \"Con océanos de amoníaco líquido.\", unlocked: true },\n        { name: \"Planeta W\", info: \"Ubicado en la periferia de su galaxia.\", unlocked: true },\n        { name: \"Planeta X\", info: \"Con múltiples lunas heladas.\", unlocked: true },\n        { name: \"Planeta Y\", info: \"Sistema meteorológico único y complejo.\", unlocked: true },\n        { name: \"Planeta Z\", info: \"Reserva de energías renovables extraterrestres.\", unlocked: true },\n        { name: \"Planeta AA\", info: \"Cúpulas geodésicas naturales en la superficie.\", unlocked: false },\n        { name: \"Planeta AB\", info: \"Con hendiduras minerales profundas.\", unlocked: false },\n        { name: \"Planeta AC\", info: \"Zona de investigación científica avanzada.\", unlocked: false },\n        { name: \"Planeta AD\", info: \"Refugio de especies acuáticas inteligentes.\", unlocked: false },\n      ]\n    },\n    { \n      type: \"Gigantes Gaseosos\", \n      image: exoplanetImages['Gigantes Gaseosos'], \n      total: 15, \n      unlocked: 10,\n      planets: [\n        { name: \"Planeta AE\", info: \"Enorme planeta con capas de gas iridiscentes.\", unlocked: true },\n        { name: \"Planeta AF\", info: \"Con sistemas de coloraciones atmosféricas cambiantes.\", unlocked: true },\n        { name: \"Planeta AG\", info: \"Posee una estación espacial natural en sus nubes.\", unlocked: true },\n        { name: \"Planeta AH\", info: \"Con internalización de torres de energía.\", unlocked: true },\n        { name: \"Planeta AI\", info: \"Presencia de gigantescas tormentas eléctricas.\", unlocked: true },\n        { name: \"Planeta AJ\", info: \"Órbita cercana a una estrella de neutrones.\", unlocked: true },\n        { name: \"Planeta AK\", info: \"Con múltiples anillos compuestos por partículas de hielo.\", unlocked: true },\n        { name: \"Planeta AL\", info: \"Centro de nexos energéticos interplanetarios.\", unlocked: true },\n        { name: \"Planeta AM\", info: \"Habitat de criaturas aéreas prehistóricas.\", unlocked: true },\n        { name: \"Planeta AN\", info: \"Reservorio de materiales de construcción avanzados.\", unlocked: true },\n        { name: \"Planeta AO\", info: \"Conducción de estudios atmosféricos profundos.\", unlocked: false },\n        { name: \"Planeta AP\", info: \"Base de investigaciones arqueológicas extraterrestres.\", unlocked: false },\n        { name: \"Planeta AQ\", info: \"Infraestructura energética autosostenible.\", unlocked: false },\n        { name: \"Planeta AR\", info: \"Área de terapias climáticas intergalácticas.\", unlocked: false },\n        { name: \"Planeta AS\", info: \"Núcleo de investigación de tecnologías cuánticas.\", unlocked: false },\n      ]\n    },\n  ]\n\n  // Función para alternar la expansión de una categoría de descubrimientos\n  const toggleExpansion = (type) => {\n    setExpandedDiscoveries(prevState => ({\n      ...prevState,\n      [type]: !prevState[type]\n    }))\n  }\n\n  // Función para completar un desafío\n  const completeChallenge = (challengeName) => {\n    setDailyChallenges(prevChallenges => \n      prevChallenges.map(challenge => \n        challenge.name === challengeName ? { ...challenge, completed: true } : challenge\n      )\n    )\n  }\n\n  // Contar los desafíos pendientes\n  const pendingChallenges = dailyChallenges.filter(challenge => !challenge.completed).length\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden flex items-center justify-center bg-[url('https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2811&q=80')] bg-cover bg-center\">\n      {/* Starfield Background with Twinkling Effect */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black\"></div>\n      {stars.map((star, index) => (\n        <motion.div\n          key={index}\n          className=\"absolute bg-white rounded-full\"\n          style={{\n            left: `${star.x}%`,\n            top: `${star.y}%`,\n            width: `${star.size}px`,\n            height: `${star.size}px`,\n            opacity: star.opacity,\n          }}\n          animate={{ opacity: [0.3, star.opacity, 0.3] }}\n          transition={{\n            duration: star.twinkleSpeed,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      ))}\n\n      {/* Overlay */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-60\"></div>\n\n      {/* Content */}\n      <div className=\"z-10 text-center space-y-8 px-4 w-full max-w-6xl\">\n        <motion.h1\n          initial={{ y: -50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, ease: 'backOut' }}\n          className=\"text-5xl md:text-6xl font-extrabold text-white mb-8\"\n          style={{ fontFamily: \"'Orbitron', sans-serif\" }}\n        >\n          Perfil del Explorador\n        </motion.h1>\n\n        <motion.div\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-black bg-opacity-50 p-8 rounded-lg border border-white border-opacity-20\"\n        >\n          {/* Navegación de Pestañas */}\n          <div className=\"flex justify-center space-x-4 mb-8\">\n            {['info', 'logros', 'habilidades', 'desafíos', 'descubrimientos'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`relative text-white text-lg font-semibold px-4 py-2 rounded-full transition-all duration-300 ${\n                  activeTab === tab ? 'bg-white bg-opacity-20' : 'hover:bg-white hover:bg-opacity-10'\n                }`}\n              >\n                {tab.charAt(0).toUpperCase() + tab.slice(1)}\n                {/* Badge para \"Desafíos\" */}\n                {tab === 'desafíos' && pendingChallenges > 0 && (\n                  <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs w-5 h-5 flex items-center justify-center rounded-full\">\n                    {pendingChallenges}\n                  </span>\n                )}\n              </button>\n            ))}\n          </div>\n\n          {/* Contenido de Pestañas */}\n          {activeTab === 'info' && (\n            <div className=\"text-white\">\n              <div className=\"flex items-center justify-center mb-6\">\n                <img src={frofilepic} alt=\"Avatar\" className=\"w-24 h-24 rounded-full border-4 border-white\" />\n                <div className=\"ml-6 text-left\">\n                  <h2 className=\"text-3xl font-bold\">Explorador Alpha</h2>\n                  <p className=\"text-xl\">Rango: Capitán Estelar</p>\n                  <div className=\"mt-2 bg-white bg-opacity-20 rounded-full h-4 w-48\">\n                    <div className=\"bg-blue-500 h-4 rounded-full\" style={{ width: '75%' }}></div>\n                  </div>\n                  <p className=\"text-sm mt-1\">Nivel 25 - 18750 / 25000 XP</p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">152</p>\n                  <p className=\"text-lg\">Misiones Completadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">7</p>\n                  <p className=\"text-lg\">Sistemas Descubiertos</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">3</p>\n                  <p className=\"text-lg\">Alianzas Formadas</p>\n                </div>\n                <div className=\"bg-white bg-opacity-10 p-4 rounded-lg\">\n                  <p className=\"text-3xl font-bold\">12,345</p>\n                  <p className=\"text-lg\">Años Luz Viajados</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'logros' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={achievement.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`p-4 rounded-lg flex items-center ${\n                    achievement.obtained ? 'bg-yellow-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                  }`}\n                >\n                  <achievement.icon className={`w-10 h-10 mr-4 ${achievement.obtained ? 'text-yellow-400' : 'text-gray-400'}`} />\n                  <div>\n                    <h3 className=\"text-xl font-bold text-white\">{achievement.name}</h3>\n                    <p className=\"text-gray-300\">{achievement.description}</p>\n                  </div>\n                  {achievement.obtained && (\n                    <Star className=\"w-6 h-6 text-yellow-400 ml-auto\" />\n                  )}\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'habilidades' && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {skills.map((skill, index) => (\n                <motion.div\n                  key={skill.name}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className=\"bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  <div className=\"flex items-center mb-2\">\n                    <skill.icon className={`w-8 h-8 ${skill.color} mr-2`} />\n                    <h3 className=\"text-xl font-bold text-white\">{skill.name}</h3>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-1 bg-gray-700 rounded-full h-2.5 mr-2\">\n                      <div className={`${skill.color} h-2.5 rounded-full`} style={{ width: `${(skill.level / 10) * 100}%` }}></div>\n                    </div>\n                    <span className=\"text-white font-bold\">{skill.level}/10</span>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'desafíos' && (\n            <div className=\"space-y-4\">\n              {dailyChallenges.map((challenge, index) => (\n                <AnimatePresence key={challenge.name}>\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -20 }}\n                    transition={{ duration: 0.5, delay: index * 0.1 }}\n                    className={`p-4 rounded-lg flex items-center ${\n                      challenge.completed ? 'bg-green-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n                    }`}\n                  >\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-xl font-bold text-white\">{challenge.name}</h3>\n                      <p className=\"text-gray-300\">{challenge.description}</p>\n                    </div>\n                    <div className=\"text-right flex items-center\">\n                      <p className=\"text-yellow-300 mr-4\">{challenge.reward}</p>\n                      {challenge.completed ? (\n                        <motion.div\n                          initial={{ scale: 0 }}\n                          animate={{ scale: 1 }}\n                          transition={{ duration: 0.3 }}\n                          className=\"flex items-center text-green-400\"\n                        >\n                          <CheckCircle className=\"w-6 h-6 mr-1\" />\n                          <span className=\"font-semibold\">Completado</span>\n                        </motion.div>\n                      ) : (\n                        <button\n                          onClick={() => completeChallenge(challenge.name)}\n                          className=\"flex items-center px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors\"\n                        >\n                          Completar\n                          <motion.div\n                            whileTap={{ scale: 0.9 }}\n                            className=\"ml-2\"\n                          >\n                            <Zap className=\"w-5 h-5 inline\" />\n                          </motion.div>\n                        </button>\n                      )}\n                    </div>\n                  </motion.div>\n                </AnimatePresence>\n              ))}\n            </div>\n          )}\n\n          {activeTab === 'descubrimientos' && (\n            <div className=\"space-y-6\">\n              {discoveries.map((discovery, index) => (\n                <motion.div\n                  key={discovery.type}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.2 }}\n                  className=\"flex flex-col bg-white bg-opacity-10 p-4 rounded-lg\"\n                >\n                  {/* Header con Imagen y Tipo */}\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center\">\n                      <img src={discovery.image} alt={discovery.type} className=\"w-20 h-20 rounded-full mr-6\" />\n                      <div>\n                        <h3 className=\"text-2xl font-bold text-white\">{discovery.type}</h3>\n                        <p className=\"text-gray-300\">{discovery.unlocked} de {discovery.total} planetas desbloqueados</p>\n                        {/* Barra de Progreso */}\n                        <div className=\"w-full bg-gray-700 rounded-full h-3 mt-1\">\n                          <div \n                            className=\"bg-green-500 h-3 rounded-full\" \n                            style={{ width: `${(discovery.unlocked / discovery.total) * 100}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Botón para Expandir/Colapsar */}\n                    <button\n                      onClick={() => toggleExpansion(discovery.type)}\n                      className=\"text-white text-xl font-semibold px-4 py-2 rounded-full bg-blue-500 hover:bg-blue-600 transition-colors\"\n                    >\n                      {expandedDiscoveries[discovery.type] ? 'Ocultar' : 'Mostrar'}\n                    </button>\n                  </div>\n\n                  {/* Lista de Planetas (Expandible en Grid) */}\n                  <AnimatePresence>\n                    {expandedDiscoveries[discovery.type] && (\n                      <motion.div\n                        initial={{ height: 0, opacity: 0 }}\n                        animate={{ height: 'auto', opacity: 1 }}\n                        exit={{ height: 0, opacity: 0 }}\n                        transition={{ duration: 0.3 }}\n                        className=\"mt-4 grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\"\n                      >\n                        {discovery.planets.map((planet, pIndex) => (\n                          <motion.div\n                            key={planet.name}\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ duration: 0.3, delay: pIndex * 0.05 }}\n                            className=\"relative bg-white bg-opacity-20 rounded-lg overflow-hidden cursor-pointer\"\n                          >\n                            {/* Imagen o Indicador de Bloqueo */}\n                            {planet.unlocked ? (\n                              <img src={planetImages[planet.name] || 'https://via.placeholder.com/80?text=Planeta'} alt={planet.name} className=\"w-full h-32 object-cover\" />\n                            ) : (\n                              <div className=\"w-full h-32 bg-gray-700 flex items-center justify-center\">\n                                <Lock className=\"w-8 h-8 text-gray-300\" />\n                              </div>\n                            )}\n\n                            {/* Overlay de Información en Hover */}\n                            {planet.unlocked && (\n                              <motion.div\n                                className=\"absolute inset-0 bg-black bg-opacity-70 flex flex-col items-center justify-center text-center p-2 opacity-0 hover:opacity-100 transition-opacity duration-300\"\n                                whileHover={{ opacity: 1 }}\n                                initial={{ opacity: 0 }}\n                                animate={{ opacity: 0 }}\n                              >\n                                <h4 className=\"text-lg font-bold text-white\">{planet.name}</h4>\n                                <p className=\"text-sm text-gray-300 mb-2\">{planet.info}</p>\n                                <button \n                                  className=\"px-3 py-1 bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors\"\n                                  onClick={() => alert(`Aprender más sobre ${planet.name}`)} // Reemplaza con lógica real\n                                >\n                                  Aprender Más\n                                </button>\n                              </motion.div>\n                            )}\n\n                            {/* Indicador para Planetas Bloqueados */}\n                            {!planet.unlocked && (\n                              <motion.div\n                                className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\"\n                                whileHover={{ opacity: 0.8 }}\n                                initial={{ opacity: 0.5 }}\n                              >\n                                <p className=\"text-white text-lg\">???</p>\n                              </motion.div>\n                            )}\n                          </motion.div>\n                        ))}\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </motion.div>\n              ))}\n            </div>\n          )}\n\n        </motion.div>\n      </div>\n\n      {/* Level Up Modal */}\n      <AnimatePresence>\n        {showLevelUpModal && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.8 }}\n            className=\"fixed inset-0 flex items-center justify-center z-50\"\n          >\n            <div className=\"bg-black bg-opacity-80 p-8 rounded-lg border-2 border-yellow-400 text-center\">\n              <h2 className=\"text-4xl font-bold text-yellow-400 mb-4\">¡Nivel Alcanzado!</h2>\n              <p className=\"text-2xl text-white mb-6\">Has alcanzado el nivel 26</p>\n              <p className=\"text-xl text-blue-300 mb-4\">Desbloqueas: Mejora de Motor Estelar</p>\n              <button\n                onClick={() => setShowLevelUpModal(false)}\n                className=\"px-6 py-3 bg-yellow-400 text-black rounded-full text-xl font-bold hover:bg-yellow-300 transition-colors\"\n              >\n                ¡Genial!\n              </button>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Additional Styles for Glowing Effects and Animations */}\n      <style jsx>{`\n        @keyframes bounce-slow {\n          0%, 100% {\n            transform: translateY(0);\n          }\n          50% {\n            transform: translateY(-15px);\n          }\n        }\n        .animate-bounce-slow {\n          animation: bounce-slow 4s infinite;\n        }\n      `}</style>\n    </div>\n  )\n}\n```\n\n### **Detalles de las Nuevas Funcionalidades**\n\n1. **Etiqueta Roja de Notificación en la Pestaña \"Desafíos\"**:\n   - **Descripción**: Si hay al menos un desafío pendiente, se muestra una etiqueta roja en la pestaña \"Desafíos\" indicando el número de desafíos pendientes.\n   - **Implementación**:\n     ```javascript\n     {tab === 'desafíos' && pendingChallenges > 0 && (\n       <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs w-5 h-5 flex items-center justify-center rounded-full\">\n         {pendingChallenges}\n       </span>\n     )}\n     ```\n     - **Explicación**: Dentro del mapa de pestañas, se verifica si la pestaña actual es \"desafíos\" y si hay desafíos pendientes (`pendingChallenges > 0`). Si ambas condiciones se cumplen, se renderiza una etiqueta roja con el número de desafíos pendientes.\n\n2. **Completar Desafíos con Animaciones Satisfactorias**:\n   - **Descripción**: Al hacer clic en el botón \"Completar\" de un desafío, se actualiza su estado a completado y se muestra una animación que indica su finalización.\n   - **Implementación**:\n     - **Estado y Función para Completar Desafíos**:\n       ```javascript\n       const [dailyChallenges, setDailyChallenges] = useState([\n         { name: \"Exploración Rápida\", description: \"Visita 3 nuevos planetas hoy\", reward: \"50 XP\", completed: false },\n         { name: \"Diplomacia Diaria\", description: \"Interactúa con 2 especies alienígenas\", reward: \"30 XP\", completed: true },\n         { name: \"Estudio Estelar\", description: \"Analiza 5 estrellas diferentes\", reward: \"40 XP\", completed: false }\n       ])\n\n       const completeChallenge = (challengeName) => {\n         setDailyChallenges(prevChallenges => \n           prevChallenges.map(challenge => \n             challenge.name === challengeName ? { ...challenge, completed: true } : challenge\n           )\n         )\n       }\n       ```\n       - **Explicación**: `completeChallenge` recibe el nombre del desafío y actualiza su estado a completado.\n\n     - **Animación al Completar un Desafío**:\n       ```javascript\n       {challenge.completed ? (\n         <motion.div\n           initial={{ scale: 0 }}\n           animate={{ scale: 1 }}\n           transition={{ duration: 0.3 }}\n           className=\"flex items-center text-green-400\"\n         >\n           <CheckCircle className=\"w-6 h-6 mr-1\" />\n           <span className=\"font-semibold\">Completado</span>\n         </motion.div>\n       ) : (\n         <button\n           onClick={() => completeChallenge(challenge.name)}\n           className=\"flex items-center px-4 py-2 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition-colors\"\n         >\n           Completar\n           <motion.div\n             whileTap={{ scale: 0.9 }}\n             className=\"ml-2\"\n           >\n             <Zap className=\"w-5 h-5 inline\" />\n           </motion.div>\n         </button>\n       )}\n       ```\n       - **Explicación**: Si un desafío está completado, se muestra un ícono de check (`CheckCircle`) con el texto \"Completado\". De lo contrario, se muestra el botón \"Completar\". Al hacer clic en este botón, se completa el desafío y se dispara una animación de escalado utilizando `framer-motion`.\n\n3. **Cambiar el Estado Visual del Desafío a \"Completado\"**:\n   - **Descripción**: Una vez que un desafío se completa, su apariencia cambia para reflejar su nuevo estado.\n   - **Implementación**:\n     ```javascript\n     className={`p-4 rounded-lg flex items-center ${\n       challenge.completed ? 'bg-green-600 bg-opacity-20' : 'bg-white bg-opacity-10'\n     }`}\n     ```\n     - **Explicación**: Si el desafío está completado, el fondo cambia a un tono verde con opacidad (`bg-green-600 bg-opacity-20`). Si no está completado, mantiene el fondo blanco semitransparente (`bg-white bg-opacity-10`).\n\n### **Visualización de las Nuevas Funcionalidades**\n\n#### **Pestaña \"Desafíos\" con Etiqueta Roja de Notificación**\n\n![Desafíos con Notificación](https://via.placeholder.com/600x200?text=Desaf%C3%ADos+Con+Notificaci%C3%B3n)\n\n#### **Desafío Pendiente**\n\n```\n+----------------------------------------------------------+\n| Exploración Rápida                                      |\n| Visita 3 nuevos planetas hoy                            |\n| Recompensa: 50 XP                                       |\n| [Completar]                                             |\n+----------------------------------------------------------+\n```\n\n#### **Desafío Completado con Animación**\n\n```\n+----------------------------------------------------------+\n| Diplomacia Diaria                                       |\n| Interactúa con 2 especies alienígenas                    |\n| Recompensa: 30 XP                                       |\n| ✔ Completado                                             |\n+----------------------------------------------------------+\n```\n\n### **Conclusión**\n\nCon estas mejoras, la sección **\"Desafíos\"** de tu componente `Profile` ahora incluye:\n\n- **Una Etiqueta Roja de Notificación** que indica el número de desafíos pendientes.\n- **La Capacidad de Completar Desafíos** con animaciones atractivas que mejoran la experiencia del usuario.\n- **Cambios Visuales Dinámicos** que reflejan el estado de cada desafío (pendiente o completado).\n\nEstas funcionalidades no solo mejoran la interactividad de tu aplicación sino que también brindan una retroalimentación visual clara y satisfactoria a los usuarios.\n\n### **Consideraciones Adicionales**\n\n1. **Persistencia del Estado**:\n   - Para mantener el estado de los desafíos completados entre sesiones, considera almacenar los datos en el **Local Storage** o en una base de datos mediante APIs.\n\n2. **Integración de Funcionalidades Adicionales**:\n   - **Modal de Aprendizaje**: En lugar de usar una alerta, puedes implementar un modal detallado para la sección \"Aprender Más\".\n   - **Recompensas**: Al completar un desafío, podrías otorgar recompensas adicionales como puntos de experiencia (XP) o desbloquear nuevas habilidades.\n\n3. **Mejoras en la Responsividad**:\n   - Asegúrate de que todas las nuevas funcionalidades se vean y funcionen correctamente en dispositivos móviles ajustando las clases de Tailwind CSS según sea necesario.\n\n4. **Accesibilidad**:\n   - Asegúrate de que todos los botones sean accesibles mediante teclado y que las etiquetas `alt` de las imágenes sean descriptivas para mejorar la accesibilidad general de tu aplicación.\n\n¡Espero que estas mejoras cumplan con tus expectativas y enriquezcan aún más tu aplicación de exploración espacial! Si tienes alguna otra solicitud o necesitas más ayuda, no dudes en preguntar."
    }
]